{"version":3,"sources":["/src/navigtaion/Item.js"],"names":["cx","NavigationItem","renderIcon","icon","render","props","children","label","leftIcon","rightIcon","onClick","href","active","level","toArray","className","addStates","addVariants","build","length","getPartClassName","touchableClassName","propTypes","string","node","func","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAUA,QAAMA,KAAK,uBAAO,gBAAP,CAAX;;QAEqBC,c;;;;;;;;iCAEjBC,U,uBAAWC,I,EAAM;AACb,mBAAO,OAAOA,IAAP,KAAgB,QAAhB,GACD,sDAAM,MAAMA,IAAZ,GADC,GAEDA,IAFN;AAGH,S;;iCAEDC,M,qBAAS;AAAA,yBAWD,KAAKC,KAXJ;AAAA,gBAGDC,QAHC,UAGDA,QAHC;AAAA,gBAIDC,KAJC,UAIDA,KAJC;AAAA,gBAKDC,QALC,UAKDA,QALC;AAAA,gBAMDC,SANC,UAMDA,SANC;AAAA,gBAODC,OAPC,UAODA,OAPC;AAAA,gBAQDC,IARC,UAQDA,IARC;AAAA,gBASDC,MATC,UASDA,MATC;AAAA,gBAUDC,KAVC,UAUDA,KAVC;;;AAaLP,uBAAW,gBAASQ,OAAT,CAAiBR,QAAjB,CAAX;;AAEA,gBAAIS,YAAYf,GAAG,KAAKK,KAAR,EACXW,SADW,CACD,EAACJ,cAAD,EADC,EAEXK,WAFW,CAEC,YAAUJ,KAAV,CAFD,EAGXK,KAHW,EAAhB;;AAKA,gBAAIZ,YAAYA,SAASa,MAAzB,EAAiC;AAC7B,uBACI;AAAA;AAAA;AACI,mCAAWJ,SADf;AAEI,iCAASL,OAFb;AAGKJ;AAHL,iBADJ;AAOH;;AAEDE,uBAAW,KAAKN,UAAL,CAAgBM,QAAhB,CAAX;AACAC,wBAAY,KAAKP,UAAL,CAAgBO,SAAhB,CAAZ;AACAF,oBAAQ;AAAA;AAAA,kBAAM,WAAWP,GAAGoB,gBAAH,CAAoB,OAApB,CAAjB;AAAgDb;AAAhD,aAAR;AACA,gBAAIc,qBAAqBrB,GAAGoB,gBAAH,CAAoB,WAApB,CAAzB;;AAEA,gBAAIT,IAAJ,EAAU;AACN,uBACI;AAAA;AAAA,sBAAK,WAAWI,SAAhB;AACI;AAAA;AAAA;AACI,kCAAMJ,IADV;AAEI,qCAASD,OAFb;AAGI,uCAAWW,kBAHf;AAIKb,gCAJL;AAKKD,6BALL;AAMKE,iCANL;AAOI;AAPJ;AADJ,iBADJ;AAaH;;AAED,mBACI;AAAA;AAAA,kBAAK,WAAWM,SAAhB;AACI;AAAA;AAAA,sBAAK,SAASL,OAAd,EAAuB,WAAWW,kBAAlC;AACKb,4BADL;AAEKD,yBAFL;AAGKE,6BAHL;AAII;AAJJ;AADJ,aADJ;AAWH,S;;;;;yBAtEgBR,c;;;AA0ErBA,mBAAeqB,SAAf,GAA2B;AACvBf,eAAO,iBAAUgB,MADM;AAEvBf,kBAAU,iBAAUgB,IAFG;AAGvBf,mBAAW,iBAAUe,IAHE;AAIvBd,iBAAS,iBAAUe,IAJI;AAKvBZ,eAAO,iBAAUa;AALM,KAA3B","file":"Item.js","sourcesContent":["/**\n * @file Navigation Item\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, Children, PropTypes} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Icon from '../Icon';\nimport TouchRipple from '../ripples/TouchRipple';\n\nconst cx = create('NavigationItem');\n\nexport default class NavigationItem extends Component {\n\n    renderIcon(icon) {\n        return typeof icon === 'string'\n            ? <Icon icon={icon} />\n            : icon;\n    }\n\n    render() {\n\n        let {\n            children,\n            label,\n            leftIcon,\n            rightIcon,\n            onClick,\n            href,\n            active,\n            level\n        } = this.props;\n\n        children = Children.toArray(children);\n\n        let className = cx(this.props)\n            .addStates({active})\n            .addVariants([`level-${level}`])\n            .build();\n\n        if (children && children.length) {\n            return (\n                <div\n                    className={className}\n                    onClick={onClick}>\n                    {children}\n                </div>\n            );\n        }\n\n        leftIcon = this.renderIcon(leftIcon);\n        rightIcon = this.renderIcon(rightIcon);\n        label = <span className={cx.getPartClassName('label')}>{label}</span>;\n        let touchableClassName = cx.getPartClassName('touchable');\n\n        if (href) {\n            return (\n                <div className={className}>\n                    <a\n                        href={href}\n                        onClick={onClick}\n                        className={touchableClassName}>\n                        {leftIcon}\n                        {label}\n                        {rightIcon}\n                        <TouchRipple />\n                    </a>\n                </div>\n            );\n        }\n\n        return (\n            <div className={className}>\n                <div onClick={onClick} className={touchableClassName}>\n                    {leftIcon}\n                    {label}\n                    {rightIcon}\n                    <TouchRipple />\n                </div>\n            </div>\n        );\n\n    }\n\n}\n\nNavigationItem.propTypes = {\n    label: PropTypes.string,\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n    onClick: PropTypes.func,\n    level: PropTypes.number\n};\n"]}