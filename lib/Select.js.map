{"version":3,"sources":["Select.js"],"names":["createOptions","cx","Select","props","context","state","open","onClick","bind","onClickOption","onPopupHide","componentDidMount","container","document","createElement","className","part","build","body","appendChild","popup","render","findDOMNode","map","children","renderItem","componentWillReceiveProps","nextProps","componentWillUnmount","unmountComponentAtNode","parentElement","removeChild","renderOptions","setState","disabled","readOnly","isOpen","e","value","onChange","type","target","child","index","renderHiddenInput","name","renderLabel","placeholder","option","findOption","label","toArray","i","len","length","renderIcon","addStates","getStyleStates","displayName","defaultProps","propTypes","string","node","isRequired","childContextTypes","contextTypes","dataSource"],"mappings":"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","file":"Select.js","sourcesContent":["/**\n * @file melon/Select\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes, Children} from 'react';\nimport ReactDOM from 'react-dom';\nimport Icon from './Icon';\nimport SeparatePopup from './select/SeparatePopup';\nimport InputComponent from 'melon-core/InputComponent';\nimport Group from './select/OptionGroup';\nimport Option from './select/Option';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Select');\n\n/**\n * melon/Select\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Select extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            open: false\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.onClickOption = this.onClickOption.bind(this);\n        this.onPopupHide = this.onPopupHide.bind(this);\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n\n        super.componentDidMount();\n\n        let container = this.container = document.createElement('div');\n\n        container.className = cx().part('popup').build();\n\n        document.body.appendChild(container);\n\n        /**\n         * 浮层\n         *\n         * @type {Object}\n         */\n        this.popup = ReactDOM.render(\n            <SeparatePopup\n                target={ReactDOM.findDOMNode(this)}\n                open={false}\n                onHide={this.onPopupHide}>\n                {Children.map(\n                    this.props.children,\n                    this.renderItem,\n                    this\n                )}\n            </SeparatePopup>,\n            container\n        );\n\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {*} nextProps 新属性\n     */\n    componentWillReceiveProps(nextProps) {\n\n        const children = nextProps.children;\n\n        if (children !== this.props.children) {\n            this.popup = ReactDOM.render(\n                <SeparatePopup\n                    target={ReactDOM.findDOMNode(this)}\n                    open={this.state.open}\n                    onHide={this.onPopupHide}>\n                    {Children.map(\n                        children,\n                        this.renderItem,\n                        this\n                    )}\n                </SeparatePopup>,\n                this.container\n            );\n        }\n\n        super.componentWillReceiveProps(nextProps);\n\n    }\n\n    /**\n     * 将要Unmount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentWillUnmount() {\n\n        let container = this.container;\n\n        if (container) {\n            ReactDOM.unmountComponentAtNode(container);\n            container.parentElement.removeChild(container);\n\n            /**\n             * 浮层的容器\n             *\n             * @type {HTMLElement}\n             */\n            this.container = container = null;\n        }\n\n        super.componentWillUnmount();\n\n    }\n\n    /**\n     * 渲染选项浮层\n     *\n     * @protected\n     * @param  {boolean} open 是否可见\n     */\n    renderOptions(open) {\n\n        this.setState({\n            open\n        }, () => {\n            ReactDOM.render(\n                <SeparatePopup\n                    target={ReactDOM.findDOMNode(this)}\n                    open={open}\n                    onHide={this.onPopupHide}>\n                    {Children.map(\n                        this.props.children,\n                        this.renderItem,\n                        this\n                    )}\n                </SeparatePopup>,\n                this.container\n            );\n        });\n\n    }\n\n    /**\n     * 点击时处理\n     *\n     * @protected\n     */\n    onClick() {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        this.renderOptions(!this.isOpen());\n    }\n\n    /**\n     * 点击选项时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     * @param  {string} e.value 当前值\n     */\n    onClickOption(e) {\n\n        const value = e.value;\n\n        this.renderOptions(false);\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value\n        });\n    }\n\n    /**\n     * popup 隐藏时调用\n     *\n     * @protected\n     */\n    onPopupHide() {\n        this.renderOptions(false);\n    }\n\n    /**\n     * 渲染选项\n     *\n     * @protected\n     * @param  {ReactElement} child 节点\n     * @param  {number} index 序号\n     * @return {ReactElement}\n     */\n    renderItem(child, index) {\n\n        if (!child) {\n            return null;\n        }\n\n        if (child.type === 'option') {\n            return (\n                <Option\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        if (child.type === 'optgroup') {\n            return (\n                <Group\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        return null;\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染label部件\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderLabel() {\n\n        const value = this.state.value;\n        const {children, placeholder} = this.props;\n\n        const option = this.findOption(value, children);\n\n        const label = option\n            ? (option.props.label || option.props.children)\n            : (\n                <span className={cx().part('label-placeholder').build()}>\n                    {placeholder}\n                </span>\n            );\n\n        return (\n            <label className={cx().part('label').build()}>\n                {label}\n            </label>\n        );\n\n    }\n\n    /**\n     * 找到当前选中的选项\n     *\n     * @protected\n     * @param  {string} value    当前值\n     * @param  {Array<ReactElement>} children 子节点数组\n     * @return {Array<ReactElement>?}\n     */\n    findOption(value, children) {\n\n        children = Children.toArray(children);\n\n        if (!children) {\n            return null;\n        }\n\n        for (let i = 0, len = children.length; i < len; ++i) {\n            const child = children[i];\n            if (child.type === 'optgroup') {\n                const option = this.findOption(value, child.props.children);\n                if (option) {\n                    return option;\n                }\n                continue;\n            }\n            if (child.props.value === value) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 渲染icon\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderIcon() {\n        return <Icon icon='expand-more' />;\n    }\n\n    /**\n     * 是否打开\n     *\n     * @protected\n     * @return {boolean}\n     */\n    isOpen() {\n        return this.state.open;\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        return (\n            <div\n                onClick={this.onClick}\n                className={cx(this.props).addStates(this.getStyleStates()).build()}>\n                {this.renderLabel()}\n                {this.renderHiddenInput()}\n                {this.renderIcon()}\n            </div>\n        );\n\n    }\n\n}\n\nSelect.displayName = 'Select';\n\nSelect.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '请选择'\n};\n\nSelect.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    children: PropTypes.node.isRequired\n};\n\nSelect.childContextTypes = InputComponent.childContextTypes;\nSelect.contextTypes = InputComponent.contextTypes;\n\n/**\n * 生成 Select 的选项\n *\n * @param  {Array<{disabled: boolean, name: string, value: string}>} dataSource 数据\n * @return {Array<ReactElement>}\n */\nexport function createOptions(dataSource) {\n\n    return dataSource.map(function (option, index) {\n\n        return (\n            <option\n                key={index}\n                disabled={option.disabled}\n                value={option.value}\n                label={option.name} />\n        );\n\n    });\n\n}\n\nSelect.createOptions = createOptions;\n"]}