{"version":3,"sources":["/src/Select.js"],"names":["createOptions","cx","Select","props","context","state","open","onClick","bind","onClickOption","onMotionEnd","onWindowResizeOrScroll","leading","trailing","hideOptions","renderOptions","componentDidUpdate","layer","main","mainArchor","layerArchor","offsetWidth","style","width","points","overflow","adjustX","adjustY","componentWillUnmount","unbindToWindow","getBoundingClientRect","bottom","top","left","right","windowHeight","windowWidth","children","map","renderItem","className","getPartClassName","closing","begin","end","opacity","scale","stiffness","damping","transform","child","index","type","renderHiddenInput","name","value","renderLabel","placeholder","option","findOption","label","part","build","toArray","i","len","length","renderIcon","isOpen","showOptions","setState","bindToWindow","window","addEventListener","removeEventListener","disabled","readOnly","e","onChange","target","render","addStates","getStyleStates","displayName","archor","oneOf","propTypes","string","node","isRequired","defaultProps","childContextTypes","contextTypes","dataSource"],"mappings":"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","file":"Select.js","sourcesContent":["/**\n * @file melon/Select\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes, Children} from 'react';\nimport Icon from './Icon';\nimport InputComponent from 'melon-core/InputComponent';\nimport Group from './select/OptionGroup';\nimport Option from './select/Option';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Layer from './Layer';\nimport align from 'dom-align';\nimport {Motion, spring} from 'react-motion';\nimport {throttle} from './common/util/fn';\nimport {getClientHeight, getClientWidth} from './common/util/dom';\n\nconst cx = create('Select');\n\n/**\n * melon/Select\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Select extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            open: false\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.onClickOption = this.onClickOption.bind(this);\n        this.onMotionEnd = this.onMotionEnd.bind(this);\n        this.onWindowResizeOrScroll = throttle(\n            this.onWindowResizeOrScroll.bind(this),\n            200,\n            {leading: true, trailing: true}\n        );\n\n        this.hideOptions = this.hideOptions.bind(this);\n        this.renderOptions = this.renderOptions.bind(this);\n\n    }\n\n    componentDidUpdate() {\n\n        if (!this.layer || !this.main || !this.state.open) {\n            return;\n        }\n\n        let {\n            mainArchor,\n            layerArchor\n        } = this.props;\n\n        if (this.layer.offsetWidth < this.main.offsetWidth) {\n            this.layer.style.width = `${this.main.offsetWidth}px`;\n        }\n\n        align(\n            this.layer,\n            this.main,\n            {\n                points: [layerArchor, mainArchor],\n                overflow: {\n                    adjustX: true,\n                    adjustY: true\n                }\n            }\n        );\n\n\n    }\n\n    componentWillUnmount() {\n        this.unbindToWindow();\n    }\n\n    onWindowResizeOrScroll() {\n\n        if (!this.state.open || !this.layer || !this.main) {\n            return;\n        }\n\n        let {\n            bottom,\n            top,\n            left,\n            right\n        } = this.main.getBoundingClientRect();\n\n        let windowHeight = getClientHeight();\n        let windowWidth = getClientWidth();\n\n        // 在视野内\n        if (\n            top > 0\n            && bottom < windowHeight\n            && left > 0\n            && right < windowWidth\n        ) {\n\n            let {\n                mainArchor,\n                layerArchor\n            } = this.props;\n\n            align(\n                this.layer,\n                this.main,\n                {\n                    points: [layerArchor, mainArchor],\n                    overflow: {\n                        adjustX: true,\n                        adjustY: true\n                    }\n                }\n            );\n\n            return;\n        }\n\n        this.hideOptions();\n\n    }\n\n    /**\n     * 渲染选项浮层\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderOptions() {\n\n        let children = Children.map(\n            this.props.children,\n            this.renderItem,\n            this\n        );\n\n        let className = cx.getPartClassName('popup');\n        let {open, closing} = this.state;\n        let begin = open && !closing ? 0 : 1;\n        let end = open && !closing ? 1 : 0;\n\n        return (\n            <Motion\n                defaultStyle={{\n                    opacity: begin,\n                    scale: begin\n                }}\n                style={{\n                    opacity: spring(end),\n                    scale: spring(end, {stiffness: 260, damping: 20})\n                }}\n                onRest={this.onMotionEnd}>\n                {({scale, opacity}) => (\n                    <div\n                        className={className}\n                        style={{\n                            opacity: opacity,\n                            transform: `scale(${scale}, ${scale})`\n                        }}\n                        ref={layer => {\n                            this.layer = layer;\n                        }}>\n                        {children}\n                    </div>\n                )}\n            </Motion>\n        );\n\n    }\n\n    /**\n     * 渲染选项\n     *\n     * @protected\n     * @param  {ReactElement} child 节点\n     * @param  {number} index 序号\n     * @return {ReactElement}\n     */\n    renderItem(child, index) {\n\n        if (!child) {\n            return null;\n        }\n\n        if (child.type === 'option') {\n            return (\n                <Option\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        if (child.type === 'optgroup') {\n            return (\n                <Group\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        return null;\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染label部件\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderLabel() {\n\n        const value = this.state.value;\n        const {children, placeholder} = this.props;\n\n        const option = this.findOption(value, children);\n\n        const label = option\n            ? (option.props.label || option.props.children)\n            : (\n                <span className={cx().part('label-placeholder').build()}>\n                    {placeholder}\n                </span>\n            );\n\n        return (\n            <label className={cx().part('label').build()}>\n                {label}\n            </label>\n        );\n\n    }\n\n    /**\n     * 找到当前选中的选项\n     *\n     * @protected\n     * @param  {string} value    当前值\n     * @param  {Array<ReactElement>} children 子节点数组\n     * @return {Array<ReactElement>?}\n     */\n    findOption(value, children) {\n\n        children = Children.toArray(children);\n\n        if (!children) {\n            return null;\n        }\n\n        for (let i = 0, len = children.length; i < len; ++i) {\n            const child = children[i];\n            if (child.type === 'optgroup') {\n                const option = this.findOption(value, child.props.children);\n                if (option) {\n                    return option;\n                }\n                continue;\n            }\n            if (child.props.value === value) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 渲染icon\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderIcon() {\n        return <Icon icon='expand-more' />;\n    }\n\n    /**\n     * 是否打开\n     *\n     * @protected\n     * @return {boolean}\n     */\n    isOpen() {\n        return this.state.open;\n    }\n\n    /**\n     * 展示浮层\n     *\n     * @private\n     */\n    showOptions() {\n        this.setState({\n            open: true\n        });\n        this.bindToWindow();\n    }\n\n    /**\n     * 隐藏选项浮层\n     *\n     * @private\n     */\n    hideOptions() {\n        this.setState({\n            closing: true\n        });\n        this.unbindToWindow();\n    }\n\n    bindToWindow() {\n        window.addEventListener('resize', this.onWindowResizeOrScroll);\n        window.addEventListener('scroll', this.onWindowResizeOrScroll);\n    }\n\n    unbindToWindow() {\n        window.addEventListener('resize', this.onWindowResizeOrScroll);\n        window.removeEventListener('scroll', this.onWindowResizeOrScroll);\n    }\n\n    /**\n     * 当动画完成时的回调\n     */\n    onMotionEnd() {\n        if (this.state.closing) {\n            this.setState({\n                closing: false,\n                open: false\n            });\n        }\n    }\n\n    /**\n     * 点击时处理\n     *\n     * @protected\n     */\n    onClick() {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        let open = this.state.open;\n\n        if (open) {\n            this.hideOptions();\n            return;\n        }\n\n        this.showOptions();\n\n    }\n\n    /**\n     * 点击选项时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     * @param  {string} e.value 当前值\n     */\n    onClickOption(e) {\n\n        const value = e.value;\n\n        if (this.state.closing) {\n            return;\n        }\n\n        this.hideOptions();\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value\n        });\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        let className = cx(this.props).addStates(this.getStyleStates()).build();\n        let {open, closing} = this.state;\n\n        return (\n            <div\n                onClick={this.onClick}\n                className={className}\n                ref={main => {\n                    this.main = main;\n                }}>\n                {this.renderLabel()}\n                {this.renderHiddenInput()}\n                {this.renderIcon()}\n                <Layer\n                    open={open || closing}\n                    onClickAway={this.hideOptions}\n                    render={this.renderOptions} />\n            </div>\n        );\n\n    }\n\n}\n\nSelect.displayName = 'Select';\n\nlet archor = PropTypes.oneOf([\n    'tl', 'tc', 'tr',\n    'cl', 'cc', 'cr',\n    'bl', 'bc', 'br'\n]);\n\nSelect.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    layerArchor: archor,\n    mainArchor: archor\n};\n\nSelect.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '请选择',\n    layerArchor: 'tl',\n    mainArchor: 'tl'\n};\n\nSelect.childContextTypes = InputComponent.childContextTypes;\nSelect.contextTypes = InputComponent.contextTypes;\n\n/**\n * 生成 Select 的选项\n *\n * @param  {Array<{disabled: boolean, name: string, value: string}>} dataSource 数据\n * @return {Array<ReactElement>}\n */\nexport function createOptions(dataSource) {\n\n    return dataSource.map(function (option, index) {\n\n        return (\n            <option\n                key={index}\n                disabled={option.disabled}\n                value={option.value}\n                label={option.name} />\n        );\n\n    });\n\n}\n\nSelect.createOptions = createOptions;\n"]}