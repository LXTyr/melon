{"version":3,"sources":["/src/Select.js"],"names":["createOptions","cx","Select","props","context","state","open","onClick","bind","onClickOption","hideOptions","renderOptions","showSelectedOption","children","map","renderOption","getPartClassName","child","index","type","value","renderHiddenInput","name","renderLabel","placeholder","option","findOption","label","part","build","toArray","i","len","length","renderIcon","isOpen","showOptions","setState","layer","popover","getLayer","selectedOption","querySelector","setTimeout","scrollIntoView","disabled","readOnly","e","closing","onChange","target","render","className","addStates","getStyleStates","autoWidth","style","maxHeight","refs","main","displayName","propTypes","string","node","isRequired","layerArchor","oneOf","mainArchor","number","bool","defaultProps","childContextTypes","contextTypes","dataSource","Option","OptionGroup"],"mappings":"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","file":"Select.js","sourcesContent":["/**\n * @file melon/Select\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes, Children} from 'react';\nimport Icon from './Icon';\nimport InputComponent from 'melon-core/InputComponent';\nimport Group from './select/OptionGroup';\nimport Option from './select/Option';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Popover, {alignments} from './Popover';\n\nconst cx = create('Select');\n\n/**\n * melon/Select\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Select extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            open: false\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.onClickOption = this.onClickOption.bind(this);\n        this.hideOptions = this.hideOptions.bind(this);\n        this.renderOptions = this.renderOptions.bind(this);\n        this.showSelectedOption = this.showSelectedOption.bind(this);\n\n    }\n\n    /**\n     * 渲染选项浮层\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderOptions() {\n\n        let children = Children.map(\n            this.props.children,\n            this.renderOption,\n            this\n        );\n\n        return (\n            <div className={cx.getPartClassName('popup')}>\n                {children}\n            </div>\n        );\n\n    }\n\n    /**\n     * 渲染选项\n     *\n     * @protected\n     * @param  {ReactElement} child 节点\n     * @param  {number} index 序号\n     * @return {ReactElement}\n     */\n    renderOption(child, index) {\n\n        if (!child) {\n            return null;\n        }\n\n        if (child.type === 'option') {\n            return (\n                <Option\n                    {...child.props}\n                    selected={this.state.value === child.props.value}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        if (child.type === 'optgroup') {\n            return (\n                <Group\n                    {...child.props}\n                    value={this.state.value}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        return null;\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染label部件\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderLabel() {\n\n        const value = this.state.value;\n        const {children, placeholder} = this.props;\n\n        const option = this.findOption(value, children);\n\n        const label = option\n            ? (option.props.label || option.props.children)\n            : (\n                <span className={cx().part('label-placeholder').build()}>\n                    {placeholder}\n                </span>\n            );\n\n        return (\n            <label className={cx().part('label').build()}>\n                {label}\n            </label>\n        );\n\n    }\n\n    /**\n     * 找到当前选中的选项\n     *\n     * @protected\n     * @param  {string} value    当前值\n     * @param  {Array<ReactElement>} children 子节点数组\n     * @return {Array<ReactElement>?}\n     */\n    findOption(value, children) {\n\n        children = Children.toArray(children);\n\n        if (!children) {\n            return null;\n        }\n\n        for (let i = 0, len = children.length; i < len; ++i) {\n\n            const child = children[i];\n\n            if (child.type === 'optgroup') {\n                const option = this.findOption(value, child.props.children);\n                if (option) {\n                    return option;\n                }\n                continue;\n            }\n            if (child.props.value === value) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 渲染icon\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderIcon() {\n        return <Icon icon='expand-more' />;\n    }\n\n    /**\n     * 是否打开\n     *\n     * @protected\n     * @return {boolean}\n     */\n    isOpen() {\n        return this.state.open;\n    }\n\n    /**\n     * 展示浮层\n     *\n     * @private\n     */\n    showOptions() {\n        this.setState({\n            open: true\n        }, this.showSelectedOption);\n    }\n\n    /**\n     * 隐藏选项浮层\n     *\n     * @private\n     */\n    hideOptions() {\n        this.setState({\n            open: false\n        });\n    }\n\n\n    showSelectedOption() {\n\n        let value = this.state.value;\n        let layer = this.popover.getLayer();\n\n        if (value == null || !layer) {\n            return;\n        }\n\n        let selectedOption = layer.querySelector(`[data-value=\"${value}\"]`);\n\n        if (selectedOption) {\n            setTimeout(() => {\n                selectedOption.scrollIntoView();\n            }, 50);\n        }\n\n    }\n\n\n    /**\n     * 点击时处理\n     *\n     * @protected\n     */\n    onClick() {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        let open = this.state.open;\n\n        if (open) {\n            this.hideOptions();\n            return;\n        }\n\n        this.showOptions();\n\n    }\n\n    /**\n     * 点击选项时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     * @param  {string} e.value 当前值\n     */\n    onClickOption(e) {\n\n        const value = e.value;\n\n        if (this.state.closing) {\n            return;\n        }\n\n        this.hideOptions();\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value\n        });\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        let className = cx(this.props).addStates(this.getStyleStates()).build();\n        let {\n            autoWidth,\n            style,\n            maxHeight\n        } = this.props;\n\n        return (\n            <div\n                onClick={this.onClick}\n                className={className}\n                style={style}\n                ref=\"main\">\n                {this.renderLabel()}\n                {this.renderHiddenInput()}\n                {this.renderIcon()}\n                <Popover\n                    ref={popover => (this.popover = popover)}\n                    maxHeight={maxHeight}\n                    autoWidth={autoWidth}\n                    variants={['select']}\n                    anchor={this.refs.main}\n                    useLayerMask={false}\n                    open={this.state.open}\n                    onRequestClose={this.hideOptions}>\n                    {this.renderOptions()}\n                </Popover>\n            </div>\n        );\n\n    }\n\n}\n\nSelect.displayName = 'Select';\n\nSelect.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    layerArchor: PropTypes.oneOf(alignments),\n    mainArchor: PropTypes.oneOf(alignments),\n    maxHeight: PropTypes.number,\n    autoWidth: PropTypes.bool\n};\n\nSelect.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '请选择',\n    layerArchor: 'tl',\n    mainArchor: 'tl',\n    autoWidth: false\n};\n\nSelect.childContextTypes = InputComponent.childContextTypes;\nSelect.contextTypes = InputComponent.contextTypes;\n\n/**\n * 生成 Select 的选项\n *\n * @param  {Array<{disabled: boolean, name: string, value: string}>} dataSource 数据\n * @return {Array<ReactElement>}\n */\nexport function createOptions(dataSource) {\n\n    return dataSource.map(function (option, index) {\n\n        let {\n            disabled,\n            value,\n            name\n        } = option;\n\n        return (\n            <option\n                key={value}\n                disabled={disabled}\n                value={value}\n                label={name} />\n        );\n\n    });\n\n}\n\nSelect.createOptions = createOptions;\n\nexport {\n    Option,\n    Group as OptionGroup\n};\n"]}