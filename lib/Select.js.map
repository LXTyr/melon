{"version":3,"sources":["Select.js"],"names":["createOptions","cx","Select","props","context","state","open","onClick","bind","onClickOption","hideOptions","renderOptions","componentDidUpdate","layer","main","mainArchor","layerArchor","points","overflow","adjustX","adjustY","componentWillUnmount","closeingTimer","clearTimeout","disabled","readOnly","setState","e","value","closing","onChange","type","target","children","map","renderItem","className","getPartClassName","begin","end","opacity","scale","stiffness","damping","transform","child","index","renderHiddenInput","name","renderLabel","placeholder","option","findOption","label","part","build","toArray","i","len","length","renderIcon","isOpen","setTimeout","render","addStates","getStyleStates","displayName","archor","oneOf","propTypes","string","node","isRequired","defaultProps","childContextTypes","contextTypes","dataSource"],"mappings":"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","file":"Select.js","sourcesContent":["/**\n * @file melon/Select\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes, Children} from 'react';\nimport Icon from './Icon';\nimport InputComponent from 'melon-core/InputComponent';\nimport Group from './select/OptionGroup';\nimport Option from './select/Option';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Layer from './Layer';\nimport align from 'dom-align';\nimport {Motion, spring} from 'react-motion';\n\nconst cx = create('Select');\n\n/**\n * melon/Select\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Select extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            open: false\n        };\n\n        this.onClick = this.onClick.bind(this);\n        this.onClickOption = this.onClickOption.bind(this);\n        this.hideOptions = this.hideOptions.bind(this);\n        this.renderOptions = this.renderOptions.bind(this);\n\n    }\n\n    componentDidUpdate() {\n\n        if (this.state.open && this.layer && this.main) {\n\n            let {\n                mainArchor,\n                layerArchor\n            } = this.props;\n\n            align(\n                this.layer,\n                this.main,\n                {\n                    points: [layerArchor, mainArchor],\n                    overflow: {\n                        adjustX: true,\n                        adjustY: true\n                    }\n                }\n            );\n        }\n\n    }\n\n    componentWillUnmount() {\n\n        if (this.closeingTimer) {\n            clearTimeout(this.closeingTimer);\n        }\n\n    }\n\n    /**\n     * 点击时处理\n     *\n     * @protected\n     */\n    onClick() {\n\n        const {disabled, readOnly} = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        let open = this.state.open;\n\n        if (open) {\n            this.hideOptions();\n        }\n        else {\n            this.setState({\n                open: true\n            });\n        }\n\n    }\n\n    /**\n     * 点击选项时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     * @param  {string} e.value 当前值\n     */\n    onClickOption(e) {\n\n        const value = e.value;\n\n        if (this.state.closing) {\n            return;\n        }\n\n        this.hideOptions();\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value\n        });\n\n    }\n\n    /**\n     * 渲染选项浮层\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderOptions() {\n\n        let children = Children.map(\n            this.props.children,\n            this.renderItem,\n            this\n        );\n\n        let className = cx.getPartClassName('popup');\n        let {open, closing} = this.state;\n        let begin = open && !closing ? 0 : 1;\n        let end = open && !closing ? 1 : 0;\n\n        return (\n            <Motion\n                defaultStyle={{\n                    opacity: begin,\n                    scale: begin\n                }}\n                style={{\n                    opacity: spring(end),\n                    scale: spring(end, {stiffness: 260, damping: 20})\n                }}>\n                {({scale, opacity}) => (\n                    <div\n                        className={className}\n                        style={{\n                            opacity: opacity,\n                            transform: `scale(${scale}, ${scale})`\n                        }}\n                        ref={layer => {\n                            this.layer = layer;\n                        }}>\n                        {children}\n                    </div>\n                )}\n            </Motion>\n        );\n\n    }\n\n    /**\n     * 渲染选项\n     *\n     * @protected\n     * @param  {ReactElement} child 节点\n     * @param  {number} index 序号\n     * @return {ReactElement}\n     */\n    renderItem(child, index) {\n\n        if (!child) {\n            return null;\n        }\n\n        if (child.type === 'option') {\n            return (\n                <Option\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        if (child.type === 'optgroup') {\n            return (\n                <Group\n                    {...child.props}\n                    onClick={this.onClickOption}\n                    key={index} />\n            );\n        }\n\n        return null;\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染label部件\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderLabel() {\n\n        const value = this.state.value;\n        const {children, placeholder} = this.props;\n\n        const option = this.findOption(value, children);\n\n        const label = option\n            ? (option.props.label || option.props.children)\n            : (\n                <span className={cx().part('label-placeholder').build()}>\n                    {placeholder}\n                </span>\n            );\n\n        return (\n            <label className={cx().part('label').build()}>\n                {label}\n            </label>\n        );\n\n    }\n\n    /**\n     * 找到当前选中的选项\n     *\n     * @protected\n     * @param  {string} value    当前值\n     * @param  {Array<ReactElement>} children 子节点数组\n     * @return {Array<ReactElement>?}\n     */\n    findOption(value, children) {\n\n        children = Children.toArray(children);\n\n        if (!children) {\n            return null;\n        }\n\n        for (let i = 0, len = children.length; i < len; ++i) {\n            const child = children[i];\n            if (child.type === 'optgroup') {\n                const option = this.findOption(value, child.props.children);\n                if (option) {\n                    return option;\n                }\n                continue;\n            }\n            if (child.props.value === value) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 渲染icon\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderIcon() {\n        return <Icon icon='expand-more' />;\n    }\n\n    /**\n     * 是否打开\n     *\n     * @protected\n     * @return {boolean}\n     */\n    isOpen() {\n        return this.state.open;\n    }\n\n    hideOptions() {\n\n        this.setState({\n            closing: true\n        });\n\n        this.closeingTimer = setTimeout(() => {\n\n            this.setState({\n                open: false,\n                closing: false\n            });\n\n            this.closeingTimer = null;\n\n        }, 500);\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        let className = cx(this.props).addStates(this.getStyleStates()).build();\n        let {open, closing} = this.state;\n\n        return (\n            <div\n                onClick={this.onClick}\n                className={className}\n                ref={main => {\n                    this.main = main;\n                }}>\n                {this.renderLabel()}\n                {this.renderHiddenInput()}\n                {this.renderIcon()}\n                <Layer\n                    open={open || closing}\n                    onClickAway={this.hideOptions}\n                    render={this.renderOptions} />\n            </div>\n        );\n\n    }\n\n}\n\nSelect.displayName = 'Select';\n\nlet archor = PropTypes.oneOf([\n    'tl', 'tc', 'tr',\n    'cl', 'cc', 'cr',\n    'bl', 'bc', 'br'\n]);\n\nSelect.propTypes = {\n    ...InputComponent.propTypes,\n    placeholder: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    layerArchor: archor,\n    mainArchor: archor\n};\n\nSelect.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '请选择',\n    layerArchor: 'tl',\n    mainArchor: 'tl'\n};\n\nSelect.childContextTypes = InputComponent.childContextTypes;\nSelect.contextTypes = InputComponent.contextTypes;\n\n/**\n * 生成 Select 的选项\n *\n * @param  {Array<{disabled: boolean, name: string, value: string}>} dataSource 数据\n * @return {Array<ReactElement>}\n */\nexport function createOptions(dataSource) {\n\n    return dataSource.map(function (option, index) {\n\n        return (\n            <option\n                key={index}\n                disabled={option.disabled}\n                value={option.value}\n                label={option.name} />\n        );\n\n    });\n\n}\n\nSelect.createOptions = createOptions;\n"]}