{"version":3,"sources":["IconMenu.js"],"names":["IconMenu","props","context","onClose","bind","onOpen","state","open","setState","render","icon","children","style","maxHeight","refs","main","propTypes","oneOfType","string","element","arrayOf","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;QAWqBA,Q;;;AAEjB,0BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,qEACxB,sBAAMD,KAAN,EAAaC,OAAb,CADwB;;AAExB,kBAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AACA,kBAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,OAAd;AACA,kBAAKE,KAAL,GAAa;AACTC,sBAAM;AADG,aAAb;AAJwB;AAO3B;;2BAEDF,M,qBAAS;AACL,iBAAKG,QAAL,CAAc;AACVD,sBAAM;AADI,aAAd;AAGH,S;;2BAEDJ,O,sBAAU;AACN,iBAAKK,QAAL,CAAc;AACVD,sBAAM;AADI,aAAd;AAGH,S;;2BAEDE,M,qBAAS;AAAA,yBAEoC,KAAKR,KAFzC;AAAA,gBAEAS,IAFA,UAEAA,IAFA;AAAA,gBAEMC,QAFN,UAEMA,QAFN;AAAA,gBAEgBC,KAFhB,UAEgBA,KAFhB;AAAA,gBAEuBC,SAFvB,UAEuBA,SAFvB;;;AAIL,mBACI;AAAA;AAAA,kBAAK,WAAU,cAAf,EAA8B,KAAI,MAAlC,EAAyC,OAAOD,KAAhD;AACI;AAAA;AAAA,sBAAQ,SAAS,KAAKP,MAAtB;AACI,0EAAM,MAAMK,IAAZ;AADJ,iBADJ;AAII;AAAA;AAAA;AACI,mCAAW,IADf;AAEI,mCAAWG,SAFf;AAGI,8BAAM,KAAKP,KAAL,CAAWC,IAHrB;AAII,gCAAQ,KAAKO,IAAL,CAAUC,IAJtB;AAKI,wCAAgB,KAAKZ,OALzB;AAMI;AAAA;AAAA,0BAAM,SAAS,KAAKA,OAApB;AACKQ;AADL;AANJ;AAJJ,aADJ;AAmBH,S;;;;;yBA9CgBX,Q;;;AAkDrBA,aAASgB,SAAT,GAAqB;AACjBN,cAAM,iBAAUO,SAAV,CAAoB,CAAC,iBAAUC,MAAX,EAAmB,iBAAUC,OAA7B,CAApB,CADW;AAEjBR,kBAAU,iBAAUS,OAAV,CAAkB,iBAAUD,OAA5B,CAFO;AAGjBN,mBAAW,iBAAUQ;AAHJ,KAArB","file":"IconMenu.js","sourcesContent":["/**\n * @file IconMenu\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Button from './Button';\nimport Icon from './Icon';\nimport Menu from './Menu';\nimport Popover from './Popover';\n\nexport default class IconMenu extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.onClose = this.onClose.bind(this);\n        this.onOpen = this.onOpen.bind(this);\n        this.state = {\n            open: false\n        };\n    }\n\n    onOpen() {\n        this.setState({\n            open: true\n        });\n    }\n\n    onClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    render() {\n\n        let {icon, children, style, maxHeight} = this.props;\n\n        return (\n            <div className=\"ui-icon-menu\" ref=\"main\" style={style}>\n                <Button onClick={this.onOpen}>\n                    <Icon icon={icon} />\n                </Button>\n                <Popover\n                    autoWidth={true}\n                    maxHeight={maxHeight}\n                    open={this.state.open}\n                    anchor={this.refs.main}\n                    onRequestClose={this.onClose}>\n                    <Menu onClose={this.onClose}>\n                        {children}\n                    </Menu>\n                </Popover>\n            </div>\n\n        );\n\n    }\n\n}\n\nIconMenu.propTypes = {\n    icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    children: PropTypes.arrayOf(PropTypes.element),\n    maxHeight: PropTypes.number\n};\n"]}