{"version":3,"sources":["boxgroup/Option.js"],"names":["cx","BoxGroupOption","props","onClick","bind","refs","ripple","animate","getIcon","boxModel","isChecked","Icons","render","checked","disabled","readOnly","className","addStates","build","icon","value","name","onChange","label","displayName","propTypes","oneOf","isRequired","string","bool","func","radio","unchecked","checkbox"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAUA,QAAMA,KAAK,uBAAO,gBAAP,CAAX;;QAEqBC,c;;;AAEjB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEACf,sBAAMA,KAAN,CADe;;AAEf,kBAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AAFe;AAGlB;;iCAEDD,O,sBAAU;AACN,iBAAKE,IAAL,CAAUC,MAAV,IAAoB,KAAKD,IAAL,CAAUC,MAAV,CAAiBC,OAAjB,EAApB;AACH,S;;iCAEDC,O,oBAAQC,Q,EAAUC,S,EAAW;AACzB,mBAAOT,eAAeU,KAAf,CAAqBF,QAArB,EAA+BC,YAAY,SAAZ,GAAwB,WAAvD,CAAP;AACH,S;;iCAEDE,M,qBAAS;;AAEL,gBAAMV,QAAQ,KAAKA,KAAnB;;AAFK,gBAKDO,QALC,GASDP,KATC,CAKDO,QALC;AAAA,gBAMDI,OANC,GASDX,KATC,CAMDW,OANC;AAAA,gBAODC,QAPC,GASDZ,KATC,CAODY,QAPC;AAAA,gBAQDC,QARC,GASDb,KATC,CAQDa,QARC;;;AAYL,gBAAMC,YAAYhB,GAAGE,KAAH,EAAUe,SAAV,CAAoB,EAACJ,gBAAD,EAApB,EAA+BK,KAA/B,EAAlB;AACA,gBAAMC,OAAO,KAAKX,OAAL,CAAaC,QAAb,EAAuBI,OAAvB,CAAb;;AAEA,mBACI;AAAA;AAAA,kBAAO,WAAWG,SAAlB,EAA6B,SAASF,YAAYC,QAAZ,GAAuB,IAAvB,GAA8B,KAAKZ,OAAzE;AACI;AACI,8BAAUW,QADd;AAEI,6BAASD,OAFb;AAGI,0BAAMX,MAAMO,QAHhB;AAII,2BAAOP,MAAMkB,KAJjB;AAKI,8BAAUL,QALd;AAMI,0BAAMb,MAAMmB,IANhB;AAOI,8BAAUN,WAAW,IAAX,GAAkBb,MAAMoB,QAPtC,GADJ;AASI,sEAAM,MAAMH,IAAZ,GATJ;AAUKjB,sBAAMqB,KAVX;AAWKT,4BAAYC,QAAZ,GAAuB,IAAvB,GAA8B,8DAAc,KAAI,QAAlB;AAXnC,aADJ;AAgBH,S;;;;;yBA9CgBd,c;;;AAkDrBA,mBAAeuB,WAAf,GAA6B,gBAA7B;;AAEAvB,mBAAewB,SAAf,GAA2B;AACvBhB,kBAAU,iBAAUiB,KAAV,CAAgB,CAAC,OAAD,EAAU,UAAV,CAAhB,EAAuCC,UAD1B;AAEvBJ,eAAO,iBAAUK,MAFM;AAGvBR,eAAO,iBAAUQ,MAHM;AAIvBf,iBAAS,iBAAUgB,IAJI;AAKvBR,cAAM,iBAAUO,MALO;AAMvBd,kBAAU,iBAAUe,IANG;AAOvBP,kBAAU,iBAAUQ,IAAV,CAAeH;AAPF,KAA3B;;AAUA1B,mBAAeU,KAAf,GAAuB;AACnBoB,eAAO;AACHlB,qBAAS,sBADN;AAEHmB,uBAAW;AAFR,SADY;AAKnBC,kBAAU;AACNpB,qBAAS,WADH;AAENmB,uBAAW;AAFL;AALS,KAAvB","file":"Option.js","sourcesContent":["/**\n * @file melon/boxgroup/Option\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Icon from '../Icon';\nimport CenterRipple from '../ripples/CenterRipple';\n\nconst cx = create('BoxGroupOption');\n\nexport default class BoxGroupOption extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.refs.ripple && this.refs.ripple.animate();\n    }\n\n    getIcon(boxModel, isChecked) {\n        return BoxGroupOption.Icons[boxModel][isChecked ? 'checked' : 'unchecked'];\n    }\n\n    render() {\n\n        const props = this.props;\n\n        const {\n            boxModel,\n            checked,\n            disabled,\n            readOnly\n        } = props;\n\n\n        const className = cx(props).addStates({checked}).build();\n        const icon = this.getIcon(boxModel, checked);\n\n        return (\n            <label className={className} onClick={disabled || readOnly ? null : this.onClick}>\n                <input\n                    disabled={disabled}\n                    checked={checked}\n                    type={props.boxModel}\n                    value={props.value}\n                    readOnly={readOnly}\n                    name={props.name}\n                    onChange={readOnly ? null : props.onChange} />\n                <Icon icon={icon} />\n                {props.label}\n                {disabled || readOnly ? null : <CenterRipple ref=\"ripple\" />}\n            </label>\n        );\n\n    }\n\n}\n\nBoxGroupOption.displayName = 'BoxGroupOption';\n\nBoxGroupOption.propTypes = {\n    boxModel: PropTypes.oneOf(['radio', 'checkbox']).isRequired,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    checked: PropTypes.bool,\n    name: PropTypes.string,\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func.isRequired\n};\n\nBoxGroupOption.Icons = {\n    radio: {\n        checked: 'radio-button-checked',\n        unchecked: 'radio-button-unchecked'\n    },\n    checkbox: {\n        checked: 'check-box',\n        unchecked: 'check-box-outline-blank'\n    }\n};\n"]}