{"version":3,"sources":["Chip.js"],"names":["cx","Chip","props","handleClick","onClick","event","handleRemoveIconClick","stopPropagation","onRemove","renderAvatar","avatarUiClassName","getPartClassName","avatar","className","indexOf","cloneElement","state","active","renderRemoveIcon","removeIconStyle","renderLabel","labelStyle","paddingRight","children","render","addStates","build","style","display","displayName","propTypes","object","element","func"],"mappings":"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","file":"Chip.js","sourcesContent":["/**\n * @file Chip\n * @author Ma63d(chuck7liu@gmail.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\n\nimport Icon from './Icon';\n\n// import {emphasize} from './common/util/color';\n\nimport {create} from 'melon-core/classname/cxBuilder';\nconst cx = create('Chip');\n\n\nexport default class Chip extends Component {\n\n    static displayName = 'Chip';\n\n    static propTypes = {\n        style: PropTypes.object,\n        removeIconStyle: PropTypes.object,\n        avatar: PropTypes.element,\n        onClick: PropTypes.func,\n        onRemove: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            active: false\n        };\n        // 当chip有onClick回调或onRemove回调时, hover和active时元素有相关样式变动\n        if (this.props.onClick || this.props.onRemove) {\n            this.state.active = true;\n        }\n\n    }\n\n\n    handleClick = event => {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    }\n\n    handleRemoveIconClick = event => {\n        event.stopPropagation();\n        if (this.props.onRemove) {\n            this.props.onRemove(event);\n        }\n    }\n\n\n    renderAvatar = () => {\n\n        let avatarUiClassName = cx.getPartClassName('avatar');\n\n        let {avatar = null} = this.props;\n        if (avatar) {\n            let className = avatar.props.className\n                ? ~avatar.props.className.indexOf(avatarUiClassName)\n                    ? avatar.props.className\n                    : `${avatar.props.className} ${avatarUiClassName}`\n                : avatarUiClassName;\n\n            avatar = React.cloneElement(avatar, {\n                className\n            });\n        }\n\n        return avatar;\n    }\n\n    renderRemoveIcon() {\n        const {\n            onRemove,\n            removeIconStyle\n        } = this.props;\n        if (onRemove) {\n            return (\n                <div\n                    className={cx.getPartClassName('icon')}>\n                    <Icon\n                        icon=\"close\"\n                        onClick={this.handleRemoveIconClick}\n                        style={removeIconStyle}/>\n                </div>\n            );\n        }\n    }\n\n    renderLabel() {\n        // 如果有remove icon 那么label的padding-right为0\n        let labelStyle = {};\n        if (this.props.onRemove) {\n            labelStyle.paddingRight = 0;\n        }\n\n        return (\n            <span\n                className={cx.getPartClassName('label')}\n                style={labelStyle}>\n                    {this.props.children}\n            </span>\n        );\n    }\n\n    render() {\n        let active = this.state.active;\n        let className = cx(this.props).addStates({\n            active\n        }).build();\n\n        return (\n            <div className={className} onClick={this.handleClick} style={this.props.style}>\n                <div style={{display: 'table'}}>\n                    {this.renderAvatar()}\n                    {this.renderLabel()}\n                    {this.renderRemoveIcon()}\n                </div>\n            </div>\n\n        );\n    }\n\n}\n\n"]}