{"version":3,"sources":["dialog/commander.js"],"names":["createDialogCommand","container","Dialog","closeEvents","options","document","createElement","className","body","appendChild","element","reduce","event","args","close","render","setTimeout","unmountComponentAtNode","removeChild"],"mappings":";;;;;;;;;;;;;;;;sBAiBwBA,mB;;;;;;AAjBxB;;;;;AAQA,QAAIC,YAAY,IAAhB;;AAEA;;;;;;;AAOe,aAASD,mBAAT,CAA6BE,MAA7B,EAAuD;AAAA,YAAlBC,WAAkB,uEAAJ,EAAI;;;AAElE,eAAO,UAAUC,OAAV,EAAmB;;AAEtB,gBAAI,CAACH,SAAL,EAAgB;AACZA,4BAAYI,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACAL,0BAAUM,SAAV,GAAsB,iCAAtB;AACAF,yBAASG,IAAT,CAAcC,WAAd,CAA0BR,SAA1B;AACH;;AAED,gBAAIS,UAAUL,SAASC,aAAT,CAAuB,KAAvB,CAAd;AACAL,sBAAUQ,WAAV,CAAsBC,OAAtB;;AAEAN,sBAAUD,YAAYQ,MAAZ,CACN,UAACP,OAAD,EAAUQ,KAAV,EAAoB;AAAA;;AAEhB,mDACOR,OADP,qDAEKQ,KAFL,IAEa;AAAA,sDAAIC,IAAJ;AAAIA,4BAAJ;AAAA;;AAAA,2BAAaT,QAAQQ,KAAR,kBAAeE,KAAf,SAAyBD,IAAzB,EAAb;AAAA,iBAFb;AAKH,aARK,EASNT,OATM,CAAV;;AAYA,kCAASW,MAAT,CACI,iCAAC,MAAD,8BAAYX,OAAZ,IAAqB,MAAM,IAA3B,IADJ,EAEIM,OAFJ;;AAKA,qBAASI,KAAT,GAAiB;;AAEb,sCAASC,MAAT,CACI,iCAAC,MAAD,8BAAYX,OAAZ,IAAqB,MAAM,KAA3B,IADJ,EAEIM,OAFJ;;AAKAM,2BAAW,YAAM;;AAEb,0CAASC,sBAAT,CAAgCP,OAAhC;AACAT,8BAAUiB,WAAV,CAAsBR,OAAtB;AACAA,8BAAU,IAAV;AAEH,iBAND,EAMG,IANH;AAQH;;AAED,mBAAOI,KAAP;AAEH,SA/CD;AAiDH","file":"commander.js","sourcesContent":["/**\n * @file 命令式窗口管理\n * @author leon <ludafa@baidu.com>\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet container = null;\n\n/**\n * 创建一个对话框构造器\n *\n * @param  {Function}      Dialog      ReactComponent\n * @param  {Array<string>} closeEvents 指定的事件会被包裹成高阶函数，获得一个 close 函数\n * @return {Function} 一个可以实时创建对话框的函数\n */\nexport default function createDialogCommand(Dialog, closeEvents = []) {\n\n    return function (options) {\n\n        if (!container) {\n            container = document.createElement('div');\n            container.className = 'melon-seperate-dialog-container';\n            document.body.appendChild(container);\n        }\n\n        let element = document.createElement('div');\n        container.appendChild(element);\n\n        options = closeEvents.reduce(\n            (options, event) => {\n\n                return {\n                    ...options,\n                    [event]: (...args) => options[event](close, ...args)\n                };\n\n            },\n            options\n        );\n\n        ReactDOM.render(\n            <Dialog {...options} open={true} />,\n            element\n        );\n\n        function close() {\n\n            ReactDOM.render(\n                <Dialog {...options} open={false} />,\n                element\n            );\n\n            setTimeout(() => {\n\n                ReactDOM.unmountComponentAtNode(element);\n                container.removeChild(element);\n                element = null;\n\n            }, 1000);\n\n        }\n\n        return close;\n\n    };\n\n}\n"]}