{"version":3,"sources":["SnackBar.js"],"names":["dom","cx","SnackBar","props","autoHideTimer","onMouseUp","bind","onHide","state","open","componentDidMount","on","document","body","openOnMount","onShow","locate","componentWillReceiveProps","nextProps","componentDidUpdate","componentWillUnmount","off","clearTimeout","direction","main","findDOMNode","style","marginTop","marginLeft","offsetWidth","offsetHeight","setState","autoHideDuration","setTimeout","e","window","event","target","srcElement","contains","render","message","action","className","addStates","addVariants","build","part","displayName","defaultProps","propTypes","string","number","node","isRequired","bool","func","oneOf","show","duration","doc","container","createElement","appendChild","snackbar","unmountComponentAtNode","removeChild","cloneElement"],"mappings":"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","file":"SnackBar.js","sourcesContent":["/**\n * @file melon/SnackBar\n * @author cxtom<cxtom2008@gmail.com>\n * @author leon<ludafa@outlook.com>\n */\n\nimport React, {PropTypes, Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from './Button';\nimport * as dom from './common/util/dom';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('SnackBar');\n\n/**\n * melon/SnackBar\n *\n * @extends {React.Component}\n * @class\n */\nexport default class SnackBar extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     */\n    constructor(props) {\n\n        super(props);\n\n        /**\n         * timeoutId\n         *\n         * @type {?number}\n         */\n        this.autoHideTimer = null;\n\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onHide = this.onHide.bind(this);\n\n        /**\n         * 状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            open: props.open\n        };\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n\n        dom.on(document.body, 'mouseup', this.onMouseUp);\n\n        if (this.props.openOnMount) {\n            this.onShow();\n        }\n\n        this.locate();\n\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {*} nextProps 新属性\n     */\n    componentWillReceiveProps(nextProps) {\n\n        const open = nextProps.open;\n\n        if (open === this.state.open) {\n            return;\n        }\n\n        open ? this.onShow() : this.onHide();\n\n    }\n\n    /**\n     * 状态更新后的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidUpdate() {\n        this.locate();\n    }\n\n    /**\n     * unount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentWillUnmount() {\n\n        dom.off(document.body, 'mouseup', this.onMouseUp);\n\n        if (this.autoHideTimer) {\n            clearTimeout(this.autoHideTimer);\n        }\n\n    }\n\n    /**\n     * 定位浮层\n     *\n     * @private\n     * @return {undefined}\n     */\n    locate() {\n\n        const direction = this.props.direction;\n\n        const open = this.state.open;\n\n        const main = ReactDOM.findDOMNode(this);\n\n        if (open) {\n            return;\n        }\n\n        switch (direction) {\n            case 'bc':\n            case 'tc':\n                main.style.marginTop = '';\n                main.style.marginLeft = -main.offsetWidth / 2 + 'px';\n                break;\n            case 'lc':\n            case 'rc':\n                main.style.marginLeft = '';\n                main.style.marginTop = -main.offsetHeight / 2 + 'px';\n                break;\n        }\n\n    }\n\n    /**\n     * 显示时的处理\n     *\n     * @protected\n     */\n    onHide() {\n\n        const onHide = this.props.onHide;\n\n        this.setState({open: false}, function () {\n            if (onHide) {\n                onHide();\n            }\n        });\n\n    }\n\n    /**\n     * 隐藏时的处理\n     *\n     * @protected\n     */\n    onShow() {\n\n        const {\n            onShow,\n            autoHideDuration\n        } = this.props;\n\n        this.setState({open: true}, function () {\n\n            if (onShow) {\n                onShow();\n            }\n\n            if (autoHideDuration > 0) {\n\n                this.autoHideTimer = setTimeout(\n                    () => {\n                        this.onHide();\n                    },\n                    autoHideDuration\n                );\n\n            }\n\n        });\n\n    }\n\n    /**\n     * 鼠标抬起时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onMouseUp(e) {\n\n        if (!this.state.open) {\n            return;\n        }\n\n        e = e || window.event;\n\n        const target = e.target || e.srcElement;\n\n        const main = ReactDOM.findDOMNode(this);\n\n        // 点击不在 snackBar 内部\n        if (main !== target && !dom.contains(main, target)) {\n            this.onHide();\n            return;\n        }\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {\n            message,\n            action,\n            direction\n        } = this.props;\n\n        const open = this.state.open;\n\n        const className = cx(this.props)\n            .addStates({open})\n            .addVariants(`direction-${direction}`)\n            .build();\n\n        return (\n            <div className={className}>\n                <span className={cx().part('message').build()}>\n                    {message}\n                </span>\n                <Button\n                    variants={['snackbar']}\n                    className={cx().part('action').build()}\n                    onClick={this.onHide} >\n                    {action}\n                </Button>\n            </div>\n        );\n\n    }\n\n}\n\nSnackBar.displayName = 'SnackBar';\n\nSnackBar.defaultProps = {\n    autoHideDuration: 0,\n    action: '关闭',\n    direction: 'bl'\n};\n\nSnackBar.propTypes = {\n    action: PropTypes.string,\n    autoHideDuration: PropTypes.number,\n    message: PropTypes.node.isRequired,\n    openOnMount: PropTypes.bool,\n    onHide: PropTypes.func,\n    onShow: PropTypes.func,\n    direction: PropTypes.oneOf(['tr', 'rt', 'rb', 'br', 'bl', 'lb', 'lt', 'tl', 'tc', 'rc', 'bc', 'lc'])\n};\n\n\nSnackBar.show = function (message, duration = 0, direction = 'bl') {\n\n    let doc = document;\n    let body = doc.body;\n    let container = doc.createElement('div');\n\n    body.appendChild(container);\n\n    let snackbar = (\n        <SnackBar\n            autoHideDuration={duration}\n            message={message}\n            direction={direction}\n            onHide={() => {\n\n                // 这里 delay 400 是因为要等动画搞完\n                setTimeout(\n                    () => {\n                        if (container) {\n                            ReactDOM.unmountComponentAtNode(container);\n                            body.removeChild(container);\n                            body = doc = container = snackbar = null;\n                        }\n                    },\n                    400\n                );\n\n            }} />\n    );\n\n    ReactDOM.render(snackbar, container, () => {\n        snackbar = React.cloneElement(snackbar, {open: true});\n        setTimeout(\n            () => {\n                ReactDOM.render(snackbar, container);\n            },\n            0\n        );\n    });\n\n    return snackbar;\n};\n"]}