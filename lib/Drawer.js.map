{"version":3,"sources":["Drawer.js"],"names":["dom","cx","REVERT_POSITION","top","bottom","left","right","Drawer","render","props","children","open","position","size","mask","onHide","maskClickClose","posValue","clientSize","getClientHeight","getClientWidth","style","height","width","visibilityTransitionDelay","transitionStyle","transition","masker","build","part","opacity","visibility","WebkitTransition","MozTransition","msTransition","overflow","displayName","propTypes","oneOf","Object","keys","isRequired","bool","number","func","defaultProps"],"mappings":"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","file":"Drawer.js","sourcesContent":["/**\n * @file Drawer\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Mask from './Mask';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport * as dom from './common/util/dom';\n\nconst cx = create('Drawer');\n\nconst REVERT_POSITION = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n};\n\n/**\n * melon/Drawer\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Drawer extends Component {\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {\n            children,\n            open,\n            position,\n            size,\n            mask,\n            onHide,\n            maskClickClose\n        } = this.props;\n\n        let posValue = open ? 0 : -size;\n\n        if (size <= 0) {\n            const clientSize = position === 'bottom' || position === 'top'\n                    ? dom.getClientHeight()\n                    : dom.getClientWidth();\n            posValue = open ? -size : clientSize;\n        }\n\n        const style = size > 0\n            ? {\n                top: position === 'bottom' ? null : posValue,\n                bottom: position === 'top' ? null : posValue,\n                left: position === 'right' ? null : posValue,\n                right: position === 'left' ? null : posValue,\n                height: position === 'bottom' || position === 'top' ? size : null,\n                width: position === 'left' || position === 'right' ? size : null\n            }\n            : {\n                top: position === 'bottom' ? posValue : 0,\n                bottom: position === 'top' ? posValue : 0,\n                left: position === 'right' ? posValue : 0,\n                right: position === 'left' ? posValue : 0,\n                height: null,\n                width: null\n            };\n\n        const visibilityTransitionDelay = open ? '0ms' : '400ms';\n        const transitionStyle = size > 0 ? position : REVERT_POSITION[position];\n\n        const transition = ''\n                +  transitionStyle + ' 400ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, '\n                +  'opacity 400ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, '\n                +  'visibility 0ms cubic-bezier(0.23, 1, 0.32, 1) ' + visibilityTransitionDelay;\n\n        const masker = mask\n            ? <Mask\n                show={open}\n                onClick={maskClickClose && onHide ? onHide : null} />\n            : null;\n\n        return (\n            <div className={cx(this.props).build()}>\n                <div\n                    className={cx().part('window').build()}\n                    style={{\n                        ...style,\n                        opacity: open ? 1 : 0,\n                        visibility: open ? 'visible' : 'hidden',\n                        transition: transition,\n                        WebkitTransition: transition,\n                        MozTransition: transition,\n                        msTransition: transition,\n                        overflow: 'auto'\n                    }}>\n                    {children}\n                </div>\n                {masker}\n            </div>\n        );\n\n    }\n\n}\n\nDrawer.displayName = 'Drawer';\n\n/**\n * propTypes\n *\n * @property {number}   position       弹出的位置\n * @property {boolean}  open           是否打开\n * @property {number}   size           宽度\n * @property {boolean}  mask           是否需要遮罩\n * @property {boolean}  maskClickClose 是否点击遮罩以后关闭\n * @property {Function} onHide         关闭时调用\n */\nDrawer.propTypes = {\n    position: PropTypes.oneOf(Object.keys(REVERT_POSITION)).isRequired,\n    open: PropTypes.bool.isRequired,\n    size: PropTypes.number.isRequired,\n    mask: PropTypes.bool,\n    maskClickClose: PropTypes.bool,\n    onHide: PropTypes.func.isRequired\n};\n\nDrawer.defaultProps = {\n    position: 'left',\n    open: false,\n    size: 300,\n    mask: true,\n    maskClickClose: true\n};\n"]}