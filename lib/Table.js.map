{"version":3,"sources":["Table.js"],"names":["SCROLL_CLASS","down","up","cx","Table","componentWillMount","setState","columns","getColumns","props","componentWillReceiveProps","nextProps","children","rowHasChanged","toArray","filter","child","type","_TABLE_COMPONENT_","map","column","i","renderHeader","sticky","header","getPartClassName","renderRow","renderBody","dataSource","noDataContent","body","length","rowData","index","part","rowHeight","headerRowHeight","highlight","height","renderFooter","render","headerSticky","style","state","build","main","displayName","propTypes","number","isRequired","bool","array","node","func","width","defaultProps","r1","r2","Column"],"mappings":"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","file":"Table.js","sourcesContent":["/**\n * @file melon/Table\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, Children, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport Row from './table/Row';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Column from './table/Column';\nimport Sticky from 'react-sticky-state';\n\nconst SCROLL_CLASS = {\n    down: 'sticky-scroll-down',\n    up: 'sticky-scroll-up'\n};\n\nconst cx = create('Table');\n\n/**\n * 表格\n *\n * @extends React.Component\n */\nclass Table extends Component {\n\n    /**\n     * 即将挂载到 DOM 时处理函数\n     *\n     * @public\n     */\n    componentWillMount() {\n        this.setState({\n            columns: this.getColumns(this.props)\n        });\n    }\n\n    /**\n     * 接受新属性时的处理函数\n     *\n     * @public\n     * @param  {*} nextProps 下一个属性\n     */\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            columns: this.getColumns(nextProps)\n        });\n    }\n\n    /**\n     * 从属性中解析出列配置\n     *\n     * @protected\n     * @param  {*} props 属性\n     * @return {Array.Element}\n     */\n    getColumns(props) {\n\n        let {children, rowHasChanged} = props;\n\n        return Children\n            .toArray(children)\n            .filter(child => child.type._TABLE_COMPONENT_ === 'COLUMN')\n            .map((column, i) => cloneElement(column, {rowHasChanged}));\n\n    }\n\n    /**\n     * 渲染表格头部\n     *\n     * @protected\n     * @param  {Array.Element} columns 表格列\n     * @param  {boolean}       sticky  是否为 sticky\n     * @return {Element}\n     */\n    renderHeader(columns, sticky) {\n\n        let header = (\n            <div className={cx.getPartClassName('header')}>\n                {this.renderRow('header', columns, null, -1)}\n            </div>\n        );\n\n        if (sticky) {\n            header = (\n                <Sticky scrollClass={SCROLL_CLASS}>\n                    {header}\n                </Sticky>\n            );\n        }\n\n        return header;\n\n    }\n\n    /**\n     * 渲染表格 body\n     *\n     * @protected\n     * @param  {Arra.Element} columns 表格列配置\n     * @return {Element}\n     */\n    renderBody(columns) {\n\n        const {dataSource, noDataContent} = this.props;\n\n        const body = dataSource && dataSource.length\n            ? dataSource.map(\n                (rowData, index) => this.renderRow('body', columns, rowData, index)\n            )\n            : (\n                <div className={cx.getPartClassName('body-empty')}>\n                    {noDataContent}\n                </div>\n            );\n\n        return (\n            <div className={cx.getPartClassName('body')}>\n                {body}\n            </div>\n        );\n\n    }\n\n    /**\n     * 渲染一行\n     *\n     * @protected\n     * @param  {string}        part       位置\n     * @param  {Array.Element} columns    列配置\n     * @param  {*}             rowData    行数据\n     * @param  {number}        index      行号\n     * @return {Element}\n     */\n    renderRow(part, columns, rowData, index) {\n\n        const {\n            rowHeight,\n            headerRowHeight,\n            highlight,\n            rowHasChanged\n        } = this.props;\n\n        const height = part === 'body' ? rowHeight : headerRowHeight;\n\n        return (\n            <Row\n                height={height}\n                highlight={highlight}\n                key={index}\n                rowIndex={index}\n                part={part}\n                columns={columns}\n                data={rowData}\n                rowHasChanged={rowHasChanged} />\n        );\n    }\n\n    /**\n     * 渲染 footer\n     *\n     * @public\n     * @param  {Array.Element} columns 列\n     * @return {Element}\n     */\n    renderFooter(columns) {\n        return null;\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {Element}\n     */\n    render() {\n\n        let {headerSticky, style} = this.props;\n        let columns = this.state.columns;\n\n        return (\n            <div\n                className={cx(this.props).build()}\n                style={style}\n                ref={main => {\n                    this.main = main;\n                }}>\n                {this.renderHeader(columns, headerSticky)}\n                {this.renderBody(columns)}\n                {this.renderFooter(columns)}\n            </div>\n        );\n\n    }\n\n}\n\nTable.displayName = 'Table';\n\nTable.propTypes = {\n    rowHeight: PropTypes.number.isRequired,\n    highlight: PropTypes.bool,\n    headerRowHeight: PropTypes.number,\n    dataSource: PropTypes.array.isRequired,\n    noDataContent: PropTypes.node,\n    rowHasChanged: PropTypes.func.isRequired,\n    headerSticky: PropTypes.bool,\n    height: PropTypes.number,\n    width: PropTypes.number\n},\n\nTable.defaultProps = {\n    highlight: true,\n    rowHeight: 48,\n    headerRowHeight: 56,\n    noDataContent: '没有数据',\n    headerSticky: true,\n    rowHasChanged(r1, r2) {\n        return r1 !== r2;\n    }\n};\n\nTable.Column = Column;\n\nexport default Table;\n\nexport {\n    Column\n};\n"]}