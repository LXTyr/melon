{"version":3,"sources":["/src/Dialog.js"],"names":["dom","cx","Dialog","props","context","state","open","onShow","bind","onHide","onMaskClick","renderLayer","onMotionEnd","componentDidMount","positionDialog","componentDidUpdate","componentWillReceiveProps","nextProps","setState","closing","hide","dialogWindow","findDOMNode","marginTop","offsetHeight","windowHeight","getClientHeight","style","e","maskClickClose","stopPropagation","renderTitle","title","part","build","renderActionPanel","actions","Array","isArray","length","map","action","size","reverse","children","width","body","footer","windowPartClassName","addVariants","className","addStates","opening","distance","yBegin","yEnd","opacityBegin","opacityEnd","control","stiffness","damping","precision","overflow","top","opacity","transform","Math","round","render","displayName","propTypes","node","bool","func","oneOfType","string","element","number","defaultProps"],"mappings":"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","file":"Dialog.js","sourcesContent":["/**\n * @file melon/Dialog\n * @author cxtom<cxtom2008@gmail.com>\n */\n\nimport React, {Component, PropTypes, cloneElement} from 'react';\nimport ReactDOM from 'react-dom';\nimport Mask from './Mask';\nimport * as dom from './common/util/dom';\nimport DialogWindow from './dialog/DialogWindow';\nimport Layer from './Layer';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport {Motion, spring} from 'react-motion';\n\nconst cx = create('Dialog');\n\n/**\n * melon/Dialog\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Dialog extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param {*} props 属性\n     * @param {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 初始状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            open: props.open\n        };\n\n        this.onShow = this.onShow.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.onMaskClick = this.onMaskClick.bind(this);\n        this.renderLayer = this.renderLayer.bind(this);\n        this.onMotionEnd = this.onMotionEnd.bind(this);\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 状态更新时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidUpdate() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {Object} nextProps 新属性\n     */\n    componentWillReceiveProps(nextProps) {\n\n        const open = nextProps.open;\n\n        if (open === this.state.open) {\n            return;\n        }\n\n        // 如果是打开，那么就直接打开。\n        if (open) {\n            this.setState({open: true});\n            return;\n        }\n\n        // 如果是关闭，但我们正在关闭，就算了。\n        if (!this.state.closing) {\n            this.hide();\n        }\n\n    }\n\n    /**\n     * 定位对话框\n     *\n     * @protected\n     */\n    positionDialog() {\n\n        let dialogWindow = this.dialogWindow;\n\n        if (!dialogWindow) {\n            return;\n        }\n\n        dialogWindow = ReactDOM.findDOMNode(this.dialogWindow);\n\n        if (this.state.open) {\n            let marginTop = -dialogWindow.offsetHeight / 2;\n            let windowHeight = dom.getClientHeight();\n\n            marginTop = dialogWindow.offsetHeight > windowHeight\n            ? (-windowHeight / 2 + 16)\n            : marginTop;\n\n            dialogWindow.style.marginTop = marginTop + 'px';\n        }\n        else {\n            dialogWindow.style.marginTop = 0;\n        }\n\n\n    }\n\n    /**\n     * 遮罩点击事件处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onMaskClick(e) {\n\n        if (this.props.maskClickClose) {\n            this.hide();\n        }\n        else {\n            e.stopPropagation();\n        }\n\n    }\n\n    /**\n     * 显示事件处理\n     *\n     * @protected\n     */\n    onShow() {\n        const onShow = this.props.onShow;\n        if (onShow) {\n            onShow();\n        }\n    }\n\n    /**\n     * 隐藏事件处理\n     *\n     * @protected\n     */\n    onHide() {\n        const onHide = this.props.onHide;\n        if (onHide) {\n            onHide();\n        }\n    }\n\n    /**\n     * 当动画完成时回调\n     *\n     * @private\n     */\n    onMotionEnd() {\n\n        if (this.state.closing) {\n\n            this.setState({\n                closing: false,\n                open: false\n            });\n\n            let onHide = this.props.onHide;\n\n            if (onHide) {\n                onHide();\n            }\n\n        }\n\n    }\n\n    /**\n     * 关闭窗口\n     *\n     * @private\n     */\n    hide() {\n\n        let {open, closing} = this.state;\n\n        if (!open || closing) {\n            return;\n        }\n\n        this.setState({closing: true});\n\n    }\n\n    /**\n     * 获取标题\n     *\n     * @protected\n     * @param {string} title 标题\n     * @return {ReactElement|null} [description]\n     */\n    renderTitle(title) {\n        return title\n            ? <h1 className={cx().part('title').build()}>{title}</h1>\n            : null;\n    }\n\n    /**\n     * 获取按钮\n     *\n     * @protected\n     * @return {ReactElement|null} [description]\n     */\n    renderActionPanel() {\n\n        let actions = this.props.actions;\n\n        if (!actions) {\n            return null;\n        }\n\n        if (!Array.isArray(actions)) {\n            actions = [actions];\n        }\n\n        if (!actions.length) {\n            return null;\n        }\n\n        actions = actions\n            .map(action => cloneElement(action, {size: 'l'}))\n            .reverse();\n\n        return (\n            <div className={cx().part('actions').build()}>\n                {actions.length === 1 ? actions[0] : actions}\n            </div>\n        );\n\n    }\n\n    /**\n     * 渲染内容\n     *\n     * @return {ReactElement}\n     */\n    renderLayer() {\n\n        let {props, state} = this;\n\n        let {\n            children,\n            width,\n            title\n        } = props;\n\n        let {open, closing} = state;\n\n        if (title) {\n            title = this.renderTitle(title);\n        }\n\n        let body = (\n            <div className={cx().part('body').build()}>\n                {children}\n            </div>\n        );\n\n        let footer = this.renderActionPanel();\n\n        let windowPartClassName = cx()\n            .part('window')\n            .addVariants(\n                width === 'adaptive' ? 'adaptive' : null,\n                title ? null : 'no-title'\n            )\n            .build();\n\n        let className = cx(props).addStates({open}).build();\n\n        let opening = open && !closing;\n\n        let distance = dom.getClientHeight() * 0.4 * (opening ? -1 : 1);\n        let yBegin = opening ? distance : 0;\n        let yEnd = opening ? 0 : distance;\n        let opacityBegin = opening ? 0 : 1;\n        let opacityEnd = opening ? 1 : 0;\n        let control = {stiffness: 200, damping: 18, precision: 1};\n\n        return (\n            <div className={className} style={!opening ? {overflow: 'hidden'} : null}>\n                <Motion\n                    defaultStyle={{\n                        top: yBegin,\n                        opacity: opacityBegin\n                    }}\n                    style={{\n                        top: spring(yEnd, control),\n                        opacity: spring(opacityEnd, control)\n                    }}\n                    onRest={this.onMotionEnd}>\n                    {({top, opacity}) => (\n                        <DialogWindow\n                           ref={dialogWindow => {\n                               this.dialogWindow = dialogWindow;\n                           }}\n                           width={width}\n                           title={title}\n                           footer={footer}\n                           className={windowPartClassName}\n                           style={{\n                               opacity: opacity,\n                               transform: `translate(-50%, ${Math.round(top)}px)`\n                           }}>\n                           {body}\n                       </DialogWindow>\n                   )}\n                </Motion>\n                <Mask\n                    show={open}\n                    lockScrollingOnShow={true}\n                    onClick={this.onMaskClick} />\n            </div>\n        );\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n        let {open, closing} = this.state;\n        return (\n            <Layer\n                open={open || closing}\n                render={this.renderLayer} />\n        );\n    }\n\n}\n\nDialog.displayName = 'Dialog';\n\n/**\n * propTypes\n *\n * @property {Array<ReactElement>} selectedIndex  选中标签的序号\n * @property {boolean}             maskClickClose 是否点击遮罩时隐藏对话框\n * @property {boolean}             open           是否显示\n * @property {Function}            onHide         隐藏时执行\n * @property {Function}            onShow         显示时执行\n * @property {ReactElement|string} title          标题\n * @property {number|string}       width          对话框宽度\n */\nDialog.propTypes = {\n    actions: PropTypes.node,\n    maskClickClose: PropTypes.bool,\n    open: PropTypes.bool,\n    onHide: PropTypes.func,\n    onShow: PropTypes.func,\n    title: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element\n    ]),\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nDialog.defaultProps = {\n    maskClickClose: true,\n    open: false\n};\n"]}