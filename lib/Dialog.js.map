{"version":3,"sources":["Dialog.js"],"names":["dom","cx","Dialog","props","context","originalHTMLBodySize","state","open","onShow","bind","onHide","onMaskClick","renderLayer","componentDidMount","positionDialog","componentDidUpdate","componentWillReceiveProps","nextProps","setState","closing","hide","componentWillUnmount","closeTimer","clearTimeout","dialogWindow","findDOMNode","marginTop","offsetHeight","windowHeight","getClientHeight","style","e","maskClickClose","stopPropagation","callback","setTimeout","renderTitle","title","part","build","renderAction","actions","children","width","body","footer","windowPartClassName","addVariants","undefined","className","addStates","opening","distance","yBegin","yEnd","opacityBegin","opacityEnd","control","stiffness","damping","top","opacity","c","transform","render","displayName","propTypes","node","bool","func","oneOfType","string","element","number","defaultProps"],"mappings":"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","file":"Dialog.js","sourcesContent":["/**\n * @file melon/Dialog\n * @author cxtom<cxtom2008@gmail.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\nimport Mask from './Mask';\nimport * as dom from './common/util/dom';\nimport DialogWindow from './dialog/DialogWindow';\nimport Layer from './Layer';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport {Motion, spring} from 'react-motion';\n\nconst cx = create('Dialog');\n\n/**\n * melon/Dialog\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Dialog extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param {*} props 属性\n     * @param {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 保存原始的 html body 样式\n         *\n         * @private\n         * @type {Object}\n         */\n        this.originalHTMLBodySize = {};\n\n        /**\n         * 初始状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            open: props.open\n        };\n\n        this.onShow = this.onShow.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.onMaskClick = this.onMaskClick.bind(this);\n        this.renderLayer = this.renderLayer.bind(this);\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 状态更新时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidUpdate() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {Object} nextProps 新属性\n     */\n    componentWillReceiveProps(nextProps) {\n\n        const open = nextProps.open;\n\n        if (open === this.state.open) {\n            return;\n        }\n\n        // 如果是打开，那么就直接打开。\n        if (open) {\n            this.setState({open: true});\n            return;\n        }\n\n        // 如果是关闭，但我们正在关闭，就算了。\n        if (!this.state.closing) {\n            this.hide();\n        }\n\n    }\n\n    componentWillUnmount() {\n\n        // 如果我们正在关闭就被卸载，那么我们要把关闭动画的定时器清理掉\n        if (this.closeTimer) {\n            clearTimeout(this.closeTimer);\n            this.closeTimer = null;\n        }\n\n    }\n\n    /**\n     * 定位对话框\n     *\n     * @protected\n     */\n    positionDialog() {\n\n        let dialogWindow = this.dialogWindow;\n\n        if (!dialogWindow) {\n            return;\n        }\n\n        dialogWindow = ReactDOM.findDOMNode(this.dialogWindow);\n\n        if (this.state.open) {\n            let marginTop = -dialogWindow.offsetHeight / 2;\n            let windowHeight = dom.getClientHeight();\n\n            marginTop = dialogWindow.offsetHeight > windowHeight\n            ? (-windowHeight / 2 + 16)\n            : marginTop;\n\n            dialogWindow.style.marginTop = marginTop + 'px';\n        }\n        else {\n            dialogWindow.style.marginTop = 0;\n        }\n\n\n    }\n\n    /**\n     * 遮罩点击事件处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onMaskClick(e) {\n\n        if (this.props.maskClickClose) {\n            this.hide(this.onHide);\n        }\n        else {\n            e.stopPropagation();\n        }\n\n    }\n\n    /**\n     * 显示事件处理\n     *\n     * @protected\n     */\n    onShow() {\n        const onShow = this.props.onShow;\n        if (onShow) {\n            onShow();\n        }\n    }\n\n    /**\n     * 隐藏事件处理\n     *\n     * @protected\n     */\n    onHide() {\n        const onHide = this.props.onHide;\n        if (onHide) {\n            onHide();\n        }\n    }\n\n    /**\n     * 关闭窗口\n     *\n     * @param {Function} callback 刚完成关闭动作时的回调\n     */\n    hide(callback) {\n\n        let {open, closing} = this.state;\n\n        if (!open || closing) {\n            return;\n        }\n\n        this.setState({closing: true});\n\n        this.closeTimer = setTimeout(() => {\n\n            this.setState({\n                open: false,\n                closing: false\n            }, callback);\n\n        }, 240);\n\n    }\n\n    /**\n     * 获取标题\n     *\n     * @protected\n     * @return {ReactElement|null} [description]\n     */\n    renderTitle() {\n\n        const title = this.props.title;\n\n        return title\n            ? <h1 className={cx().part('title').build()}>{title}</h1>\n            : null;\n\n    }\n\n    /**\n     * 获取按钮\n     *\n     * @protected\n     * @return {ReactElement|null} [description]\n     */\n    renderAction() {\n\n        const actions = this.props.actions;\n\n        return actions\n            ? (\n                <div className={cx().part('actions').build()}>\n                    {actions}\n                </div>\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染内容\n     *\n     * @return {ReactElement}\n     */\n    renderLayer() {\n\n        const {props, state} = this;\n\n        const {\n            children,\n            width\n        } = props;\n\n        const {open, closing} = state;\n\n        const title = this.renderTitle();\n\n        const body = (\n            <div className={cx().part('body').build()}>\n                {children}\n            </div>\n        );\n\n        const footer = this.renderAction();\n\n        const windowPartClassName = cx()\n            .part('window')\n            .addVariants(width === 'adaptive' ? 'adaptive' : undefined)\n            .build();\n\n        const className = cx(props).addStates({open}).build();\n\n        const opening = open && !closing;\n\n        const distance = dom.getClientHeight() * 0.4 * (opening ? -1 : 1);\n        const yBegin = opening ? distance : 0;\n        const yEnd = opening ? 0 : distance;\n        const opacityBegin = opening ? 0 : 1;\n        const opacityEnd = opening ? 1 : 0;\n        const control = opening\n            ? {stiffness: 300, damping: 30}\n            : {stiffness: 300, damping: 30};\n\n        return (\n            <div className={className}>\n                <Motion\n                    defaultStyle={{\n                        top: yBegin,\n                        opacity: opacityBegin\n                    }}\n                    style={{\n                        top: spring(yEnd, control),\n                        opacity: spring(opacityEnd)\n                    }}>\n                    {({top, opacity}) => (\n                        <DialogWindow\n                           ref={c => {\n                               this.dialogWindow = c;\n                           }}\n                           width={width}\n                           title={title}\n                           footer={footer}\n                           className={windowPartClassName}\n                           style={{\n                               opacity,\n                               transform: `translate(-50%, ${top}px)`\n                           }}>\n                           {body}\n                       </DialogWindow>\n                    )}\n                </Motion>\n                <Mask\n                    show={open}\n                    lockScrollingOnShow={true}\n                    onClick={this.onMaskClick} />\n            </div>\n        );\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        let {open, closing} = this.state;\n\n        return (\n            <Layer\n                open={open || closing}\n                render={this.renderLayer} />\n        );\n    }\n\n}\n\nDialog.displayName = 'Dialog';\n\n/**\n * propTypes\n *\n * @property {Array<ReactElement>} selectedIndex  选中标签的序号\n * @property {boolean}             maskClickClose 是否点击遮罩时隐藏对话框\n * @property {boolean}             open           是否显示\n * @property {Function}            onHide         隐藏时执行\n * @property {Function}            onShow         显示时执行\n * @property {ReactElement|string} title          标题\n * @property {number|string}       width          对话框宽度\n */\nDialog.propTypes = {\n    actions: PropTypes.node,\n    maskClickClose: PropTypes.bool,\n    open: PropTypes.bool,\n    onHide: PropTypes.func,\n    onShow: PropTypes.func,\n    title: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element\n    ]),\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nDialog.defaultProps = {\n    maskClickClose: true,\n    open: false\n};\n"]}