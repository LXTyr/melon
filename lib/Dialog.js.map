{"version":3,"sources":["Dialog.js"],"names":["cx","Dialog","props","originalHTMLBodySize","state","open","onShow","bind","onHide","onMaskClick","componentDidMount","positionDialog","componentDidUpdate","componentWillReceiveProps","nestProps","setState","dialogWindow","findDOMNode","marginTop","offsetHeight","windowHeight","getClientHeight","style","marginLeft","offsetWidth","e","maskClickClose","stopPropagation","renderTitle","title","part","build","renderAction","actions","render","children","width","body","footer","windowPartClassName","addVariants","undefined","className","addStates","y","Math","round","c","displayName","propTypes","node","bool","func","oneOfType","string","element","number","defaultProps"],"mappings":"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","file":"Dialog.js","sourcesContent":["/**\n * @file melon/Dialog\n * @author cxtom<cxtom2008@gmail.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\nimport Mask from './Mask';\nimport dom from './common/util/dom';\nimport DialogWindow from './dialog/DialogWindow';\nimport omit from 'lodash/omit';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport {Motion, spring} from 'react-motion';\n\nconst cx = create('Dialog');\n\n/**\n * melon/Dialog\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Dialog extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props 属性\n     */\n    constructor(props) {\n\n        super(props);\n\n        /**\n         * 保存原始的 html body 样式\n         *\n         * @private\n         * @type {Object}\n         */\n        this.originalHTMLBodySize = {};\n\n        /**\n         * 初始状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            open: props.open\n        };\n\n        this.onShow = this.onShow.bind(this);\n        this.onHide = this.onHide.bind(this);\n        this.onMaskClick = this.onMaskClick.bind(this);\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 状态更新时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidUpdate() {\n        if (this.state.open) {\n            this.positionDialog();\n        }\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {Object}  nestProps 新属性\n     */\n    componentWillReceiveProps(nestProps) {\n\n        const open = nestProps.open;\n\n        if (open === this.state.open) {\n            return;\n        }\n\n        this.setState({open}, open ? this.onShow : this.onHide);\n\n    }\n\n    /**\n     * 定位对话框\n     *\n     * @protected\n     */\n    positionDialog() {\n        let dialogWindow = ReactDOM.findDOMNode(this.dialogWindow);\n        let marginTop = -dialogWindow.offsetHeight / 2;\n\n        let windowHeight = dom.getClientHeight();\n\n        marginTop = dialogWindow.offsetHeight > windowHeight\n                        ? (-windowHeight / 2 + 16)\n                        : marginTop;\n        dialogWindow.style.marginLeft = -dialogWindow.offsetWidth / 2 + 'px';\n        dialogWindow.style.marginTop = marginTop + 'px';\n    }\n\n    /**\n     * 遮罩点击事件处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onMaskClick(e) {\n        if (this.props.maskClickClose) {\n            this.setState({open: false}, this.onHide);\n        }\n        else {\n            e.stopPropagation();\n        }\n    }\n\n    /**\n     * 显示事件处理\n     *\n     * @protected\n     */\n    onShow() {\n        const onShow = this.props.onShow;\n        if (onShow) {\n            onShow();\n        }\n    }\n\n    /**\n     * 隐藏事件处理\n     *\n     * @protected\n     */\n    onHide() {\n        const onHide = this.props.onHide;\n        if (onHide) {\n            onHide();\n        }\n    }\n\n    /**\n     * 获取标题\n     *\n     * @protected\n     * @return {ReactElement|null} [description]\n     */\n    renderTitle() {\n\n        const title = this.props.title;\n\n        return title\n            ? <h1 className={cx().part('title').build()}>{title}</h1>\n            : null;\n\n    }\n\n    /**\n     * 获取按钮\n     *\n     * @protected\n     * @return {ReactElement|null} [description]\n     */\n    renderAction() {\n\n        const actions = this.props.actions;\n\n        return actions\n            ? (\n                <div ref=\"dialogActions\" className={cx().part('actions').build()}>\n                    {actions}\n                </div>\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {props, state} = this;\n\n        const {\n            children,\n            width\n        } = props;\n\n        const open = state.open;\n\n        const title = this.renderTitle();\n\n        const body = (\n            <div className={cx().part('body').build()}>\n                {children}\n            </div>\n        );\n\n        const footer = this.renderAction();\n\n        const windowPartClassName = cx()\n            .part('window')\n            .addVariants(width === 'adaptive' ? 'adaptive' : undefined)\n            .build();\n\n        const className = cx(props).addStates({open}).build();\n\n        return (\n            <div className={className}>\n                <Motion style={{y: spring(open ? 0 : -80)}}>\n                    {({y}) =>\n                        <DialogWindow\n                            top={Math.round(y)}\n                            ref={c => {\n                                this.dialogWindow = c;\n                            }}\n                            width={width}\n                            title={title}\n                            footer={footer}\n                            className={windowPartClassName}>\n                            {body}\n                        </DialogWindow>\n                    }\n                </Motion>\n                <Mask\n                    show={open}\n                    lockScrollingOnShow={true}\n                    onClick={this.onMaskClick} />\n            </div>\n        );\n\n    }\n\n}\n\nDialog.displayName = 'Dialog';\n\n/**\n * propTypes\n *\n * @property {Array<ReactElement>} selectedIndex  选中标签的序号\n * @property {boolean}             maskClickClose 是否点击遮罩时隐藏对话框\n * @property {boolean}             open           是否显示\n * @property {Function}            onHide         隐藏时执行\n * @property {Function}            onShow         显示时执行\n * @property {ReactElement|string} title          标题\n * @property {number|string}       width          对话框宽度\n */\nDialog.propTypes = {\n    actions: PropTypes.node,\n    maskClickClose: PropTypes.bool,\n    open: PropTypes.bool,\n    onHide: PropTypes.func,\n    onShow: PropTypes.func,\n    title: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element\n    ]),\n    width: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ])\n};\n\nDialog.defaultProps = {\n    maskClickClose: true,\n    open: false\n};\n"]}