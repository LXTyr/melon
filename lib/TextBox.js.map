{"version":3,"sources":["TextBox.js"],"names":["cx","getValueStringLength","value","length","TextBox","props","context","state","isFocus","onFocus","bind","onBlur","onChange","componentDidMount","multiline","autoFocus","syncTextareaHeight","input","focus","componentDidUpdate","hasOwnProperty","e","setState","type","target","currentValue","currentTarget","style","height","scrollHeight","renderFloatingLabel","floatingLabel","isFloating","render","defaultValue","rest","floating","className","addStates","fulfilled","getStyleStates","build","findDOMNode","displayName","defaultProps","propTypes","oneOf","placeholder","string","bool","contextTypes"],"mappings":"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","file":"TextBox.js","sourcesContent":["/**\n * @file TextBox\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\nimport FloatingLabel from './textbox/FloatLabel';\nimport TextBoxInput from './textbox/Input';\nimport InputComponent from 'melon-core/InputComponent';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('TextBox');\n\nfunction getValueStringLength(value) {\n    return value == null ? 0 : ('' + value).length;\n}\n\n/**\n * melon/TextBox\n *\n * @extends {React.Component}\n * @class\n */\nexport default class TextBox extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            isFocus: false\n        };\n\n        this.onFocus = this.onFocus.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n\n\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n\n        super.componentDidMount();\n\n        let {\n            multiline,\n            autoFocus\n        } = this.props;\n\n        if (multiline && this.state.value != null) {\n            this.syncTextareaHeight();\n        }\n\n        if (autoFocus) {\n            this.input.focus();\n        }\n\n    }\n\n    componentDidUpdate() {\n\n        const props = this.props;\n\n        if (\n            // 多行的\n            props.multiline\n            // 控制的\n            && !props.hasOwnProperty('defaultValue')\n        ) {\n            // 同步高度\n            this.syncTextareaHeight();\n        }\n\n    }\n\n    /**\n     * 获取焦点时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onFocus(e) {\n\n        this.setState({\n            isFocus: true\n        });\n\n        const onFocus = this.props.onFocus;\n\n        if (onFocus)  {\n            onFocus({\n                type: 'focus',\n                target: this\n            });\n            return;\n        }\n\n    }\n\n    /**\n     * 失去焦点时处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onBlur(e) {\n\n        this.setState({\n            isFocus: false\n        });\n\n        const onBlur = this.props.onBlur;\n\n        if (onBlur)  {\n            onBlur({\n                type: 'blur',\n                target: this\n            });\n        }\n\n\n    }\n\n    onChange(e) {\n\n        const currentValue = this.state.value;\n\n        super.onChange({\n            value: e.target.value,\n            target: e.target,\n            currentTarget: this,\n            type: 'change'\n        }, () => {\n            if (\n                this.props.multiline\n                && this.props.hasOwnProperty('defaultValue')\n                && currentValue !== this.state.value\n            ) {\n                this.syncTextareaHeight();\n            }\n        });\n\n    }\n\n    /**\n     * 多行时同步输入框高度\n     *\n     * @protected\n     */\n    syncTextareaHeight() {\n\n        const input = this.input;\n\n        if (input) {\n            input.style.height = 'auto';\n            input.style.height = input.scrollHeight + 'px';\n        }\n\n    }\n\n    /**\n     * 渲染浮动标签\n     *\n     * @protected\n     * @param  {string}  floatingLabel 标签内容\n     * @param  {boolean} isFloating    是否浮动\n     * @param  {boolean} isFocus       是否获取焦点\n     * @return {?ReactElement}\n     */\n    renderFloatingLabel(floatingLabel, isFloating, isFocus) {\n\n        if (!floatingLabel) {\n            return null;\n        }\n\n        return (\n            <FloatingLabel\n                floating={isFloating || isFocus}\n                focused={isFocus}\n                label={floatingLabel} />\n        );\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {\n            onFocus,\n            onBlur,\n            onChange,\n            props\n        } = this;\n\n        const {\n            floatingLabel,\n            defaultValue,\n            ...rest\n        } = props;\n\n        const {\n            isFocus,\n            value = defaultValue\n        } = this.state;\n\n        const floating = !!getValueStringLength(value) || isFocus;\n\n        const className = cx(props)\n            .addStates({\n                floating: floatingLabel && floating,\n                focus: isFocus,\n                fulfilled: value == null\n            })\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div className={className}>\n                {this.renderFloatingLabel(floatingLabel, floating, isFocus)}\n                <TextBoxInput\n                    {...rest}\n                    onFocus={onFocus}\n                    onBlur={onBlur}\n                    onChange={onChange}\n                    isFocus={isFocus}\n                    value={value == null ? '' : value}\n                    ref={input => {\n                        if (input) {\n                            this.input = ReactDOM.findDOMNode(input);\n                        }\n                    }} />\n            </div>\n        );\n\n    }\n\n}\n\nTextBox.displayName = 'TextBox';\n\nTextBox.defaultProps = {\n    type: 'text'\n};\n\nTextBox.propTypes = {\n    type: PropTypes.oneOf(['text', 'password', 'number']),\n    placeholder: PropTypes.string,\n    floatingLabel: PropTypes.string,\n    multiline: PropTypes.bool,\n    autoFocus: PropTypes.bool\n};\n\nTextBox.contextTypes = InputComponent.contextTypes;\n"]}