{"version":3,"sources":["region/Province.js"],"names":["helper","cx","RegionProvince","props","state","expand","onSelectorChange","bind","onMouseEnter","onMouseLeave","e","value","datasource","onChange","data","setState","renderSelectedInfo","total","children","length","num","reduce","result","child","index","selected","part","build","render","addStates","text","id","propTypes","func","disabled","bool","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;QAQYA,M;AARZ;;;;;AAUA,QAAMC,KAAK,uBAAO,gBAAP,CAAX;;QAEqBC,c;;;AAEjB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEAEf,sBAAMA,KAAN,CAFe;;AAIf,kBAAKC,KAAL,GAAa;AACTC,wBAAQ;AADC,aAAb;;AAIA,kBAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,kBAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,kBAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;;AAVe;AAYlB;;iCAEDD,gB,6BAAiBI,C,EAAG;;AAEhB,gBAAMC,QAAQD,EAAEC,KAAhB;AAFgB,yBAGe,KAAKR,KAHpB;AAAA,gBAGTS,UAHS,UAGTA,UAHS;AAAA,gBAGGC,QAHH,UAGGA,QAHH;;;AAKhBb,mBAAOW,QAAQ,WAAR,GAAsB,WAA7B,EAA0CC,UAA1C;;AAEAC,wBAAYA,SAAS;AACjBC,sBAAMF;AADW,aAAT,CAAZ;AAIH,S;;iCAEDJ,Y,yBAAaE,C,EAAG;AACZ,iBAAKK,QAAL,CAAc,EAACV,QAAQ,IAAT,EAAd;AACH,S;;iCAEDI,Y,yBAAaC,C,EAAG;AACZ,iBAAKK,QAAL,CAAc,EAACV,QAAQ,KAAT,EAAd;AACH,S;;iCAEDW,kB,iCAAqB;;AAEjB,gBAAMJ,aAAa,KAAKT,KAAL,CAAWS,UAA9B;;AAEA,gBAAMK,QAAQL,WAAWM,QAAX,IAAuBN,WAAWM,QAAX,CAAoBC,MAAzD;;AAEA,gBAAI,CAACF,KAAL,EAAY;AACR;AACH;;AAED,gBAAMG,MAAMR,WACPM,QADO,CAEPG,MAFO,CAEA,UAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AACpC,oBAAID,MAAME,QAAV,EAAoB;AAChBH;AACH;AACD,uBAAOA,MAAP;AACH,aAPO,EAOL,CAPK,CAAZ;;AASA,mBAAQF,QAAQH,KAAR,IAAiBG,QAAQ,CAA1B,GACD,IADC,GAEC;AAAA;AAAA,kBAAM,WAAWnB,KAAKyB,IAAL,CAAU,MAAV,EAAkBC,KAAlB,EAAjB;AACK,sBAAMP,GAAN,GAAY,GAAZ,GAAkBH,KAAlB,GAA0B;AAD/B,aAFR;AAMH,S;;iCAEDW,M,qBAAS;AAAA,0BAKD,KAAKzB,KALJ;AAAA,gBAGDS,UAHC,WAGDA,UAHC;AAAA,gBAIDM,QAJC,WAIDA,QAJC;;;AAOL,mBACI;AAAA;AAAA,kBAAK,WAAWjB,GAAG,KAAKE,KAAR,EAAe0B,SAAf,CAAyB,EAACxB,QAAQ,KAAKD,KAAL,CAAWC,MAApB,EAAzB,EAAsDsB,KAAtD,EAAhB;AACI,kCAAcT,WAAW,KAAKV,YAAhB,GAA+B,IADjD;AAEI,kCAAcU,WAAW,KAAKT,YAAhB,GAA+B,IAFjD;AAGI;AACI,2BAAOG,WAAWkB,IADtB;AAEI,wBAAIlB,WAAWmB,EAFnB;AAGI,6BAASnB,WAAWa,QAHxB;AAII,8BAAU,KAAKnB,gBAJnB,GAHJ;AAQK,qBAAKU,kBAAL,EARL;AASKE,2BACG;AAAA;AAAA,sBAAK,WAAWjB,KAAKyB,IAAL,CAAU,OAAV,EAAmBC,KAAnB,EAAhB;AACI;AAAA;AAAA;AACKT;AADL;AADJ,iBADH,GAMG;AAfR,aADJ;AAmBH,S;;;;;yBA1FgBhB,c;;;AA8FrBA,mBAAe8B,SAAf,GAA2B;AACvBnB,kBAAU,iBAAUoB,IADG;AAEvBC,kBAAU,iBAAUC,IAFG;AAGvBvB,oBAAY,iBAAUwB;AAHC,KAA3B","file":"Province.js","sourcesContent":["/**\n * @file Region/RegionProvince\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {PropTypes, Component} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Selector from './Selector';\nimport * as helper from './helper';\n\nconst cx = create('RegionProvince');\n\nexport default class RegionProvince extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            expand: false\n        };\n\n        this.onSelectorChange = this.onSelectorChange.bind(this);\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n\n    }\n\n    onSelectorChange(e) {\n\n        const value = e.value;\n        const {datasource, onChange} = this.props;\n\n        helper[value ? 'selectAll' : 'cancelAll'](datasource);\n\n        onChange && onChange({\n            data: datasource\n        });\n\n    }\n\n    onMouseEnter(e) {\n        this.setState({expand: true});\n    }\n\n    onMouseLeave(e) {\n        this.setState({expand: false});\n    }\n\n    renderSelectedInfo() {\n\n        const datasource = this.props.datasource;\n\n        const total = datasource.children && datasource.children.length;\n\n        if (!total) {\n            return;\n        }\n\n        const num = datasource\n            .children\n            .reduce(function (result, child, index) {\n                if (child.selected) {\n                    result++;\n                }\n                return result;\n            }, 0);\n\n        return (num === total || num === 0)\n            ? null : (\n                <span className={cx().part('info').build()}>\n                    {'(' + num + '/' + total + ')'}\n                </span>\n            );\n    }\n\n    render() {\n\n        const {\n            datasource,\n            children\n        } = this.props;\n\n        return (\n            <div className={cx(this.props).addStates({expand: this.state.expand}).build()}\n                onMouseEnter={children ? this.onMouseEnter : null}\n                onMouseLeave={children ? this.onMouseLeave : null}>\n                <Selector\n                    label={datasource.text}\n                    id={datasource.id}\n                    checked={datasource.selected}\n                    onChange={this.onSelectorChange} />\n                {this.renderSelectedInfo()}\n                {children ? (\n                    <div className={cx().part('popup').build()}>\n                        <ul>\n                            {children}\n                        </ul>\n                    </div>\n                ) : null}\n            </div>\n        );\n    }\n\n}\n\nRegionProvince.propTypes = {\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    datasource: PropTypes.object\n};\n"]}