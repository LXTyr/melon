{"version":3,"sources":["region/Selector.js"],"names":["cx","RegionSelector","props","onClick","bind","e","onChange","checked","value","target","getIcon","isChecked","icons","Icons","render","disabled","hasInput","name","label","id","className","addStates","build","displayName","defaultProps","propTypes","string","bool","func","unchecked"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AASA,QAAMA,KAAK,uBAAO,gBAAP,CAAX;;QAEqBC,c;;;AAEjB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEAEf,sBAAMA,KAAN,CAFe;;AAIf,kBAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;;AAJe;AAMlB;;iCAGDD,O,oBAAQE,C,EAAG;AAAA,yBAIH,KAAKH,KAJF;AAAA,gBAEHI,QAFG,UAEHA,QAFG;AAAA,gBAGHC,OAHG,UAGHA,OAHG;;;AAMPD,wBAAYA,SAAS;AACjBE,uBAAO,CAACD,OADS;AAEjBE,wBAAQ;AAFS,aAAT,CAAZ;AAIH,S;;iCAEDC,O,oBAAQC,S,EAAW;AACf,gBAAIC,QAAQX,eAAeY,KAA3B;AACA,mBAAOD,MAAMD,YAAY,SAAZ,GAAwB,WAA9B,CAAP;AACH,S;;iCAEDG,M,qBAAS;AAAA,0BAUD,KAAKZ,KAVJ;AAAA,gBAGDK,OAHC,WAGDA,OAHC;AAAA,gBAIDQ,QAJC,WAIDA,QAJC;AAAA,gBAKDC,QALC,WAKDA,QALC;AAAA,gBAMDR,KANC,WAMDA,KANC;AAAA,gBAODS,IAPC,WAODA,IAPC;AAAA,gBAQDC,KARC,WAQDA,KARC;AAAA,gBASDC,EATC,WASDA,EATC;;;AAYL,gBAAIC,YAAYpB,GAAG,KAAKE,KAAR,EAAemB,SAAf,CAAyB,EAACd,gBAAD,EAAzB,EAAoCe,KAApC,EAAhB;;AAEA,mBACI;AAAA;AAAA,kBAAO,WAAWF,SAAlB,EAA6B,kBAAgBD,EAA7C,EAAiD,SAAS,KAAKhB,OAA/D;AACKa,2BAAW;AACR,8BAAUD,QADF;AAER,6BAASR,OAFD;AAGR,0BAAK,UAHG;AAIR,2BAAOC,KAJC;AAKR,0BAAMS,IALE,GAAX,GAKoB,IANzB;AAOI,sEAAM,MAAM,KAAKP,OAAL,CAAaH,OAAb,CAAZ,GAPJ;AAQKW;AARL,aADJ;AAaH,S;;;;;yBAvDgBjB,c;;;AA2DrBA,mBAAesB,WAAf,GAA6B,gBAA7B;;AAEAtB,mBAAeuB,YAAf,GAA8B;AAC1BR,kBAAU;AADgB,KAA9B;;AAIAf,mBAAewB,SAAf,GAA2B;AACvBP,eAAO,iBAAUQ,MADM;AAEvBlB,eAAO,iBAAUkB,MAFM;AAGvBnB,iBAAS,iBAAUoB,IAHI;AAIvBV,cAAM,iBAAUS,MAJO;AAKvBX,kBAAU,iBAAUY,IALG;AAMvBR,YAAI,iBAAUO,MANS;AAOvBV,kBAAU,iBAAUW,IAPG;AAQvBrB,kBAAU,iBAAUsB;AARG,KAA3B;;AAWA3B,mBAAeY,KAAf,GAAuB;AACnBN,iBAAS,WADU;AAEnBsB,mBAAW;AAFQ,KAAvB","file":"Selector.js","sourcesContent":["/**\n * @file melon/region/Selector\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport Icon from '../Icon';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('RegionSelector');\n\nexport default class RegionSelector extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n\n    }\n\n\n    onClick(e) {\n        let {\n            onChange,\n            checked\n        } = this.props;\n\n        onChange && onChange({\n            value: !checked,\n            target: this\n        });\n    }\n\n    getIcon(isChecked) {\n        let icons = RegionSelector.Icons;\n        return icons[isChecked ? 'checked' : 'unchecked'];\n    }\n\n    render() {\n\n        let {\n            checked,\n            disabled,\n            hasInput,\n            value,\n            name,\n            label,\n            id\n        } = this.props;\n\n        let className = cx(this.props).addStates({checked}).build();\n\n        return (\n            <label className={className} data-region-id={id} onClick={this.onClick}>\n                {hasInput ? <input\n                    disabled={disabled}\n                    checked={checked}\n                    type=\"checkbox\"\n                    value={value}\n                    name={name} /> : null}\n                <Icon icon={this.getIcon(checked)} />\n                {label}\n            </label>\n        );\n\n    }\n\n}\n\nRegionSelector.displayName = 'RegionSelector';\n\nRegionSelector.defaultProps = {\n    hasInput: false\n};\n\nRegionSelector.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.string,\n    checked: PropTypes.bool,\n    name: PropTypes.string,\n    disabled: PropTypes.bool,\n    id: PropTypes.string,\n    hasInput: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nRegionSelector.Icons = {\n    checked: 'check-box',\n    unchecked: 'check-box-outline-blank'\n};\n"]}