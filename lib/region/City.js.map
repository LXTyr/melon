{"version":3,"sources":["region/City.js"],"names":["cx","RegionCity","props","onSelectorChange","bind","e","value","datasource","onChange","selected","data","render","build","text","id","displayName","propTypes","func","disabled","bool","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAUA,QAAMA,KAAK,uBAAO,YAAP,CAAX;;QAEqBC,U;;;AAEjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEAEf,sBAAMA,KAAN,CAFe;;AAIf,kBAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;;AAJe;AAMlB;;6BAEDD,gB,6BAAiBE,C,EAAG;AAAA,gBAETC,KAFS,GAEAD,CAFA,CAETC,KAFS;AAAA,yBAIe,KAAKJ,KAJpB;AAAA,gBAITK,UAJS,UAITA,UAJS;AAAA,gBAIGC,QAJH,UAIGA,QAJH;;;AAMhBD,uBAAWE,QAAX,GAAsBH,KAAtB;;AAEAE,wBAAYA,SAAS;AACjBE,sBAAMH;AADW,aAAT,CAAZ;AAIH,S;;6BAEDI,M,qBAAS;AAAA,gBAEEJ,UAFF,GAEgB,KAAKL,KAFrB,CAEEK,UAFF;;;AAIL,mBACI;AAAA;AAAA,kBAAI,WAAWP,GAAG,KAAKE,KAAR,EAAeU,KAAf,EAAf;AACI;AACI,2BAAOL,WAAWM,IADtB;AAEI,wBAAIN,WAAWO,EAFnB;AAGI,6BAASP,WAAWE,QAHxB;AAII,8BAAU,KAAKN,gBAJnB;AADJ,aADJ;AAUH,S;;;;;yBAtCgBF,U;;;AA0CrBA,eAAWc,WAAX,GAAyB,YAAzB;;AAEAd,eAAWe,SAAX,GAAuB;AACnBR,kBAAU,iBAAUS,IADD;AAEnBC,kBAAU,iBAAUC,IAFD;AAGnBZ,oBAAY,iBAAUa;AAHH,KAAvB","file":"City.js","sourcesContent":["/**\n * @file Region/RegionCity\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {PropTypes, Component} from 'react';\n\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Selector from './Selector';\n\nconst cx = create('RegionCity');\n\nexport default class RegionCity extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.onSelectorChange = this.onSelectorChange.bind(this);\n\n    }\n\n    onSelectorChange(e) {\n\n        const {value} = e;\n\n        const {datasource, onChange} = this.props;\n\n        datasource.selected = value;\n\n        onChange && onChange({\n            data: datasource\n        });\n\n    }\n\n    render() {\n\n        const {datasource} = this.props;\n\n        return (\n            <li className={cx(this.props).build()}>\n                <Selector\n                    label={datasource.text}\n                    id={datasource.id}\n                    checked={datasource.selected}\n                    onChange={this.onSelectorChange} />\n            </li>\n        );\n\n    }\n\n}\n\nRegionCity.displayName = 'RegionCity';\n\nRegionCity.propTypes = {\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    datasource: PropTypes.object\n};\n"]}