{"version":3,"sources":["Tabs.js"],"names":["cx","Tabs","props","selectedIndex","state","componentWillReceiveProps","nextProps","setState","handleTabClick","index","e","onBeforeChange","onChange","isDefaultPrevented","getTabCount","count","children","isTabSelected","render","tabIndex","percent","tabContents","tabs","toArray","i","len","length","tab","selected","push","key","style","width","onClick","disabled","bind","InkBarStyles","left","build","part","propTypes","number","isRequired","func","defaultProps","Tab"],"mappings":"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","file":"Tabs.js","sourcesContent":["/**\n * @file melon/Tabs\n * @author cxtom<cxtom2008@gmail.com>\n */\n\nimport React, {Component, PropTypes, cloneElement, Children} from  'react';\nimport Tab from './tabs/Tab';\nimport TabPanel from  './tabs/Panel';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Tabs');\n\n/**\n * melon/Tabs\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Tabs extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param {*} props 属性\n     */\n    constructor(props) {\n\n        super(props);\n\n        const selectedIndex = props.selectedIndex;\n\n        /**\n         * 状态\n         *\n         * @private\n         * @type {Object}\n         */\n        this.state = {\n            selectedIndex\n        };\n\n    }\n\n    /**\n     * 接受新属性时的处理\n     *\n     * @public\n     * @override\n     * @param {*} nextProps 新属性\n     */\n    componentWillReceiveProps(nextProps) {\n\n        if (nextProps.selectedIndex !== this.state.selectedIndex) {\n            this.setState({\n                selectedIndex: nextProps.selectedIndex\n            });\n        }\n    }\n\n    /**\n     * 处理 Tab 点击事件\n     *\n     * @private\n     * @param {number} index tab 序号\n     * @param {e}      e     原始点击事件\n     */\n    handleTabClick(index, e) {\n\n        if (index === this.state.selectedIndex) {\n            return;\n        }\n\n        let {onBeforeChange, onChange} = this.props;\n\n        e.selectedIndex = index;\n\n        if (onBeforeChange) {\n\n            onBeforeChange(e);\n\n            if (e.isDefaultPrevented()) {\n                return;\n            }\n        }\n\n        this.setState({selectedIndex: index}, function () {\n            onChange && onChange(e);\n        });\n\n    }\n\n    /**\n     * 获取 Tab 总数\n     *\n     * @protected\n     * @return {number}\n     */\n    getTabCount() {\n        return Children.count(this.props.children);\n    }\n\n    /**\n     * 指定序号的标签是否被选中\n     *\n     * @protected\n     * @param {number} index 序号\n     * @return {boolean}\n     */\n    isTabSelected(index) {\n        return this.state.selectedIndex === index;\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n        let tabIndex = 0;\n        const percent = 1 / this.getTabCount() * 100 + '%';\n        const tabContents = [];\n        const tabs = [];\n        const children = Children.toArray(props.children);\n\n        for (let i = 0, len = children.length; i < len; ++i) {\n\n            let tab = children[i];\n\n            const selected = this.isTabSelected(i);\n\n            if (selected) {\n                tabIndex = i;\n            }\n\n            if (children) {\n                tabContents.push(\n                    <TabPanel key={i} active={selected}>\n                        {tab.props.children}\n                    </TabPanel>\n                );\n            }\n\n            tabs.push(cloneElement(tab, {\n                key: i,\n                selected: selected,\n                tabIndex: i,\n                style: {width: percent},\n                onClick: tab.props.disabled ? null : this.handleTabClick.bind(this, i)\n            }));\n\n        }\n\n        const InkBarStyles = {\n            width: percent,\n            left: 'calc(' + percent + '*' + tabIndex + ')'\n        };\n\n        return (\n            <div {...props} className={cx(props).build()}>\n                <ul>\n                    {tabs}\n                    <li className={cx().part('inkbar').build()} style={InkBarStyles}></li>\n                </ul>\n                {tabContents}\n            </div>\n        );\n\n    }\n\n}\n\n/**\n * propTypes\n *\n * @property {number}   selectedIndex  选中标签的序号\n * @property {Function} onChange       选中标签发生变化后处理函数\n * @property {Function} onBeforeChange 选中标签发生变化前处理函数\n */\nTabs.propTypes = {\n    selectedIndex: PropTypes.number.isRequired,\n    onChange: PropTypes.func,\n    onBeforeChange: PropTypes.func\n};\n\nTabs.defaultProps = {\n    selectedIndex: 0\n};\n\nTabs.Tab = Tab;\n"]}