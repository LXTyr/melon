{"version":3,"sources":["select/OptionGroup.js"],"names":["SelectOptionGroup","cx","props","value","children","disabled","label","onClick","build","part","map","child","index","type","propTypes","bool","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;sBAiBwBA,iB;;;;;;AAjBxB;;;;;AASA,QAAMC,KAAK,uBAAO,mBAAP,CAAX;;AAEA;;;;;;AAMe,aAASD,iBAAT,CAA2BE,KAA3B,EAAkC;AAAA,YAGzCC,KAHyC,GAQzCD,KARyC,CAGzCC,KAHyC;AAAA,YAIzCC,QAJyC,GAQzCF,KARyC,CAIzCE,QAJyC;AAAA,YAKzCC,QALyC,GAQzCH,KARyC,CAKzCG,QALyC;AAAA,YAMzCC,KANyC,GAQzCJ,KARyC,CAMzCI,KANyC;AAAA,YAOzCC,OAPyC,GAQzCL,KARyC,CAOzCK,OAPyC;;;AAU7C,eACI;AAAA;AAAA,cAAK,WAAWN,GAAGC,KAAH,EAAUM,KAAV,EAAhB;AACI;AAAA;AAAA,kBAAI,WAAWP,KAAKQ,IAAL,CAAU,OAAV,EAAmBD,KAAnB,EAAf;AAA4CF;AAA5C,aADJ;AAEI;AAAA;AAAA,kBAAK,WAAWL,KAAKQ,IAAL,CAAU,MAAV,EAAkBD,KAAlB,EAAhB;AACK,gCAASE,GAAT,CAAaN,QAAb,EAAuB,UAACO,KAAD,EAAQC,KAAR,EAAkB;;AAEtC,wBAAID,MAAME,IAAN,KAAe,QAAnB,EAA6B;AACzB,+BAAO,IAAP;AACH;;AAED,2BACI,kFACQF,MAAMT,KADd;AAEI,6BAAKS,MAAMT,KAAN,CAAYC,KAFrB;AAGI,kCAAUQ,MAAMT,KAAN,CAAYC,KAAZ,KAAsBA,KAHpC;AAII,kCAAUQ,MAAMT,KAAN,CAAYG,QAAZ,IAAwBA,QAJtC;AAKI,iCAASE,OALb,IADJ;AASH,iBAfA;AADL;AAFJ,SADJ;AAwBH;;AAEDP,sBAAkBc,SAAlB,GAA8B;AAC1BT,kBAAU,iBAAUU,IADM;AAE1BT,eAAO,iBAAUU,MAAV,CAAiBC;AAFE,KAA9B","file":"OptionGroup.js","sourcesContent":["/**\n * @file 下拉框选项组\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Children, PropTypes} from 'react';\nimport Option from './Option';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('SelectOptionGroup');\n\n/**\n * OptionGroup\n *\n * @class\n * @param {*} props 属性\n */\nexport default function SelectOptionGroup(props) {\n\n    const {\n        value,\n        children,\n        disabled,\n        label,\n        onClick\n    } = props;\n\n    return (\n        <div className={cx(props).build()}>\n            <h4 className={cx().part('title').build()}>{label}</h4>\n            <div className={cx().part('list').build()}>\n                {Children.map(children, (child, index) => {\n\n                    if (child.type !== 'option') {\n                        return null;\n                    }\n\n                    return (\n                        <Option\n                            {...child.props}\n                            key={child.props.value}\n                            selected={child.props.value === value}\n                            disabled={child.props.disabled || disabled}\n                            onClick={onClick} />\n                    );\n\n                })}\n            </div>\n        </div>\n    );\n\n}\n\nSelectOptionGroup.propTypes = {\n    disabled: PropTypes.bool,\n    label: PropTypes.string.isRequired\n};\n"]}