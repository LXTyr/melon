{"version":3,"sources":["table/TextEditor.js"],"names":["cx","TableCellTextEditor","args","state","open","onMainClick","bind","onClose","onChange","onConfirm","setState","e","submit","value","refs","input","getValue","props","columnData","rowIndex","rowData","columnIndex","dataKey","render","children","mode","placeholder","title","className","build","footer","getPartClassName","text","main","parentNode","part","addVariants","propTypes","oneOf","string","func","isRequired"],"mappings":"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","file":"TextEditor.js","sourcesContent":["/**\n * @file 单元格文本编辑\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '../Popover';\nimport TextBox from '../TextBox';\nimport Button from '../Button';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Title from '../Title';\n\nconst cx = create('TableCellTextEditor');\n\nexport default class TableCellTextEditor extends Component {\n\n    constructor(...args) {\n\n        super(...args);\n\n        this.state = {\n            open: false\n        };\n\n        this.onMainClick = this.onMainClick.bind(this);\n        this.onClose = this.onClose.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n\n    }\n\n    onMainClick() {\n        this.setState({open: true});\n    }\n\n    onClose() {\n        this.setState({open: false});\n    }\n\n    onChange(e) {\n        this.submit(e.value);\n    }\n\n    onConfirm() {\n        this.submit(this.refs.input.getValue());\n        this.setState({open: false});\n    }\n\n    submit(value) {\n\n        let {onChange, columnData, rowIndex, rowData, columnIndex, dataKey} = this.props;\n\n        onChange({\n            columnData,\n            rowData,\n            columnIndex,\n            rowIndex,\n            dataKey,\n            value\n        });\n\n    }\n\n    render() {\n\n        let {\n            children,\n            mode,\n            placeholder,\n            title\n        } = this.props;\n\n        let className = cx(this.props).build();\n\n        title = mode === 'confirm'\n            ? (\n                <Title level={3}>{title}</Title>\n            )\n            : null;\n\n        let footer = mode === 'confirm'\n            ? (\n                <footer className={cx.getPartClassName('footer')}>\n                    <Button\n                        size=\"xs\"\n                        variants={['info']}\n                        onClick={this.onClose}>\n                        取消\n                    </Button>\n                    <Button\n                        size=\"xs\"\n                        variants={['info']}\n                        onClick={this.onConfirm}>\n                        确定\n                    </Button>\n                </footer>\n            )\n            : null;\n\n        let text = mode === 'confirm'\n            ? (\n                <TextBox\n                    ref=\"input\"\n                    autoFocus\n                    variants={['fluid']}\n                    placeholder={placeholder}\n                    defaultValue={children} />\n            )\n            : (\n                <TextBox\n                    autoFocus\n                    variants={['fluid']}\n                    placeholder={placeholder}\n                    value={children}\n                    onChange={this.onChange} />\n            );\n\n        return (\n            <div ref=\"main\" onClick={this.onMainClick} className={className}>\n                {children}\n                <Popover\n                    open={this.state.open}\n                    anchor={this.refs.main && this.refs.main.parentNode}\n                    onRequestClose={this.onClose}>\n                    <div className={cx().part('layer').addVariants(mode).build()}>\n                        {title}\n                        {text}\n                        {footer}\n                    </div>\n                </Popover>\n            </div>\n        );\n\n    }\n\n}\n\nTableCellTextEditor.propTypes = {\n    mode: PropTypes.oneOf(['inline', 'confirm']),\n    children: PropTypes.string,\n    placeholder: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n"]}