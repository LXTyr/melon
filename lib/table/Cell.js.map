{"version":3,"sources":["table/Cell.js"],"names":["cx","JUSTIFY_CONTENT_MAP","left","center","right","TableCell","shouldComponentUpdate","nextProps","props","render","height","content","columnData","align","width","grow","shrink","maxWidth","minWidth","style","justifyContent","flexBasis","flexGrow","flexShrink","build","displayName","propTypes","part","oneOf","shape","number","isRequired","rowData","any","columnIndex","rowIndex","cellData","cellKey","oneOfType","string","cellRenderer","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AASA,QAAMA,KAAK,uBAAO,WAAP,CAAX;;AAEA,QAAMC,sBAAsB;AACxBC,cAAM,YADkB;AAExBC,gBAAQ,QAFgB;AAGxBC,eAAO;AAHiB,KAA5B;;QAMqBC,S;;;;;;;;4BAEjBC,qB,kCAAsBC,S,EAAW;AAC7B,mBAAO,CAAC,+BAAaA,SAAb,EAAwB,KAAKC,KAA7B,CAAR;AACH,S;;4BAEDC,M,qBAAS;AAAA,yBAMD,KAAKD,KANJ;AAAA,gBAGDE,MAHC,UAGDA,MAHC;AAAA,gBAIDC,OAJC,UAIDA,OAJC;AAAA,gBAKDC,UALC,UAKDA,UALC;AAAA,gBASDC,KATC,GAeDD,UAfC,CASDC,KATC;AAAA,gBAUDC,KAVC,GAeDF,UAfC,CAUDE,KAVC;AAAA,gBAWDC,IAXC,GAeDH,UAfC,CAWDG,IAXC;AAAA,gBAYDC,MAZC,GAeDJ,UAfC,CAYDI,MAZC;AAAA,gBAaDC,QAbC,GAeDL,UAfC,CAaDK,QAbC;AAAA,gBAcDC,QAdC,GAeDN,UAfC,CAcDM,QAdC;;;AAiBL,gBAAMC,QAAQ;AACVC,gCAAgBnB,oBAAoBY,KAApB,CADN;AAEVQ,2BAAWP,KAFD;AAGVJ,wBAAQA,MAHE;AAIVY,0BAAUP,IAJA;AAKVQ,4BAAYP,MALF;AAMVC,kCANU;AAOVC;AAPU,aAAd;;AAUA,mBACI;AAAA;AAAA,kBAAK,WAAWlB,GAAG,KAAKQ,KAAR,EAAegB,KAAf,EAAhB,EAAwC,OAAOL,KAA/C;AACKR;AADL,aADJ;AAMH,S;;;;;yBAvCgBN,S;;;AA2CrBA,cAAUoB,WAAV,GAAwB,WAAxB;;AAEApB,cAAUqB,SAAV,GAAsB;;AAElBC,cAAM,iBAAUC,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,CAAhB,CAFY;;AAIlBhB,oBAAY,iBAAUiB,KAAV,CAAgB;AACxBf,mBAAO,iBAAUgB,MAAV,CAAiBC,UADA;AAExBlB,mBAAO,iBAAUe,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,EAA6CG,UAF5B;AAGxBhB,kBAAM,iBAAUe,MAAV,CAAiBC,UAHC;AAIxBf,oBAAQ,iBAAUc,MAAV,CAAiBC,UAJD;AAKxBd,sBAAU,iBAAUa,MALI;AAMxBZ,sBAAU,iBAAUY;AANI,SAAhB,CAJM;;AAalBE,iBAAS,iBAAUC,GAbD;AAclBC,qBAAa,iBAAUJ,MAdL;AAelBK,kBAAU,iBAAUL,MAfF;AAgBlBM,kBAAU,iBAAUH,GAhBF;AAiBlBI,iBAAS,iBAAUC,SAAV,CAAoB,CACzB,iBAAUC,MAAV,CAAiBR,UADQ,EAEzB,iBAAUD,MAAV,CAAiBC,UAFQ,CAApB,CAjBS;;AAsBlBrB,gBAAQ,iBAAUoB,MAAV,CAAiBC,UAtBP;AAuBlBS,sBAAc,iBAAUC;;AAvBN,KAAtB;;AA2BApC,cAAUqC,YAAV,GAAyB;AACrB7B,eAAO;AADc,KAAzB","file":"Cell.js","sourcesContent":["/**\n * @file melon/TableCell\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport shallowEqual from 'melon-core/util/shallowEqual';\n\nconst cx = create('TableCell');\n\nconst JUSTIFY_CONTENT_MAP = {\n    left: 'flex-start',\n    center: 'center',\n    right: 'flex-end'\n};\n\nexport default class TableCell extends Component {\n\n    shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n    }\n\n    render() {\n\n        const {\n            height,\n            content,\n            columnData\n        } = this.props;\n\n        let {\n            align,\n            width,\n            grow,\n            shrink,\n            maxWidth,\n            minWidth\n        } = columnData;\n\n        const style = {\n            justifyContent: JUSTIFY_CONTENT_MAP[align],\n            flexBasis: width,\n            height: height,\n            flexGrow: grow,\n            flexShrink: shrink,\n            maxWidth,\n            minWidth\n        };\n\n        return (\n            <div className={cx(this.props).build()} style={style}>\n                {content}\n            </div>\n        );\n\n    }\n\n}\n\nTableCell.displayName = 'TableCell';\n\nTableCell.propTypes = {\n\n    part: PropTypes.oneOf(['header', 'body', 'footer']),\n\n    columnData: PropTypes.shape({\n        width: PropTypes.number.isRequired,\n        align: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n        grow: PropTypes.number.isRequired,\n        shrink: PropTypes.number.isRequired,\n        maxWidth: PropTypes.number,\n        minWidth: PropTypes.number\n    }),\n\n    rowData: PropTypes.any,\n    columnIndex: PropTypes.number,\n    rowIndex: PropTypes.number,\n    cellData: PropTypes.any,\n    cellKey: PropTypes.oneOfType([\n        PropTypes.string.isRequired,\n        PropTypes.number.isRequired\n    ]),\n\n    height: PropTypes.number.isRequired,\n    cellRenderer: PropTypes.func\n\n};\n\nTableCell.defaultProps = {\n    align: 'left'\n};\n"]}