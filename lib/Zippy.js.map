{"version":3,"sources":["Zippy.js"],"names":["cx","Zippy","render","props","expand","direction","variants","states","others","className","addVariants","addStates","close","build","style","isVertical","transform","WebkitTransform","MozTransform","msTransform","displayName","propTypes","oneOf","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAWA,QAAMA,KAAK,uBAAO,OAAP,CAAX;;AAGA;;;;;;;QAMqBC,K;;;;;;;;wBAQjBC,M,qBAAS;;AAEL,gBAAMC,QAAQ,KAAKA,KAAnB;;AAFK,gBAKDC,MALC,GAUDD,KAVC,CAKDC,MALC;AAAA,gBAMDC,SANC,GAUDF,KAVC,CAMDE,SANC;AAAA,gBAODC,QAPC,GAUDH,KAVC,CAODG,QAPC;AAAA,gBAQDC,MARC,GAUDJ,KAVC,CAQDI,MARC;AAAA,gBASEC,MATF,wCAUDL,KAVC;;;AAYL,gBAAMM,YAAYT,KACbU,WADa,CACDJ,QADC,EAEbK,SAFa,CAEHJ,MAFG,EAGbG,WAHa,CAGDL,SAHC,EAIbM,SAJa,CAIH,EAACC,OAAO,CAACR,MAAT,EAJG,EAKbS,KALa,EAAlB;;AAOA,gBAAIC,QAAQ,KAAKX,KAAL,CAAWW,KAAvB;AACA,gBAAIC,aAAaV,cAAc,UAA/B;AACA,gBAAIW,wBAAqBD,aAAa,CAAb,GAAiB,CAAtC,YAA4CA,aAAa,CAAb,GAAiB,CAA7D,OAAJ;;AAEA,gBAAI,CAACX,MAAL,EAAa;AACTU,oDACOA,KADP;AAEIG,qCAAiBD,SAFrB;AAGIE,kCAAcF,SAHlB;AAIIG,iCAAaH,SAJjB;AAKIA;AALJ;AAOH;;AAED,mBACI,oEAASR,MAAT,IAAiB,OAAOM,KAAxB,EAA+B,WAAWL,SAA1C,IADJ;AAIH,S;;;;;yBA7CgBR,K;;;AAiDrBA,UAAMmB,WAAN,GAAoB,OAApB;;AAEAnB,UAAMoB,SAAN,GAAkB;AACdhB,mBAAW,uBAAUiB,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CADG;AAEdlB,gBAAQ,uBAAUmB;AAFJ,KAAlB;;AAKAtB,UAAMuB,YAAN,GAAqB;AACjBnB,mBAAW,UADM;AAEjBD,gBAAQ;AAFS,KAArB","file":"Zippy.js","sourcesContent":["/**\n * @file Zippy\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Zippy');\n\n\n/**\n * melon/Zippy\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Zippy extends Component {\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n\n        const {\n            expand,\n            direction,\n            variants,\n            states,\n            ...others\n        } = props;\n\n        const className = cx()\n            .addVariants(variants)\n            .addStates(states)\n            .addVariants(direction)\n            .addStates({close: !expand})\n            .build();\n\n        let style = this.props.style;\n        let isVertical = direction === 'vertical';\n        let transform = `scale(${isVertical ? 1 : 0}, ${isVertical ? 0 : 1})`;\n\n        if (!expand) {\n            style = {\n                ...style,\n                WebkitTransform: transform,\n                MozTransform: transform,\n                msTransform: transform,\n                transform\n            };\n        }\n\n        return (\n            <div {...others} style={style} className={className} />\n        );\n\n    }\n\n}\n\nZippy.displayName = 'Zippy';\n\nZippy.propTypes = {\n    direction: PropTypes.oneOf(['vertical', 'horizontal']),\n    expand: PropTypes.bool\n};\n\nZippy.defaultProps = {\n    direction: 'vertical',\n    expand: false\n};\n"]}