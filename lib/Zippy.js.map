{"version":3,"sources":["Zippy.js"],"names":["cx","Zippy","render","props","expand","horizontal","variants","states","others","className","addVariants","addStates","close","build","style","displayName","propTypes","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;AASA,QAAMA,KAAK,uBAAO,OAAP,CAAX;;AAGA;;;;;;;QAMqBC,K;;;;;;;;wBAQjBC,M,qBAAS;;AAEL,gBAAMC,QAAQ,KAAKA,KAAnB;;AAFK,gBAKDC,MALC,GAUDD,KAVC,CAKDC,MALC;AAAA,gBAMDC,UANC,GAUDF,KAVC,CAMDE,UANC;AAAA,gBAODC,QAPC,GAUDH,KAVC,CAODG,QAPC;AAAA,gBAQDC,MARC,GAUDJ,KAVC,CAQDI,MARC;AAAA,gBASEC,MATF,wCAUDL,KAVC;;;AAYL,gBAAMM,YAAYT,KACbU,WADa,CACDJ,QADC,EAEbK,SAFa,CAEHJ,MAFG,EAGbG,WAHa,CAGDL,aAAa,YAAb,GAA4B,UAH3B,EAIbM,SAJa,CAIH,EAACC,OAAO,CAACR,MAAT,EAJG,EAKbS,KALa,EAAlB;;AAOA,gBAAIC,QAAQ,KAAKX,KAAL,CAAWW,KAAvB;;AAEA,gBAAI,CAACV,MAAL,EAAa;AAAA;;AACTU,oDACOA,KADP,qDAEKT,aAAa,OAAb,GAAuB,QAF5B,IAEuC,CAFvC;AAIH;;AAED,mBACI,oEAASG,MAAT,IAAiB,OAAOM,KAAxB,EAA+B,WAAWL,SAA1C,IADJ;AAIH,S;;;;;yBAxCgBR,K;;;AA4CrBA,UAAMc,WAAN,GAAoB,OAApB;;AAEAd,UAAMe,SAAN,GAAkB;AACdX,oBAAY,iBAAUY,IADR;AAEdb,gBAAQ,iBAAUa;AAFJ,KAAlB;;AAKAhB,UAAMiB,YAAN,GAAqB;AACjBb,oBAAY,KADK;AAEjBD,gBAAQ;AAFS,KAArB","file":"Zippy.js","sourcesContent":["/**\n * @file Zippy\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Zippy');\n\n\n/**\n * melon/Zippy\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Zippy extends Component {\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n\n        const {\n            expand,\n            horizontal,\n            variants,\n            states,\n            ...others\n        } = props;\n\n        const className = cx()\n            .addVariants(variants)\n            .addStates(states)\n            .addVariants(horizontal ? 'horizontal' : 'vertical')\n            .addStates({close: !expand})\n            .build();\n\n        let style = this.props.style;\n\n        if (!expand) {\n            style = {\n                ...style,\n                [horizontal ? 'width' : 'height']: 0\n            };\n        }\n\n        return (\n            <div {...others} style={style} className={className} />\n        );\n\n    }\n\n}\n\nZippy.displayName = 'Zippy';\n\nZippy.propTypes = {\n    horizontal: PropTypes.bool,\n    expand: PropTypes.bool\n};\n\nZippy.defaultProps = {\n    horizontal: false,\n    expand: false\n};\n"]}