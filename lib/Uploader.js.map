{"version":3,"sources":["Uploader.js"],"names":["cx","Uploader","props","context","state","isUploading","isUploaded","value","onFileChange","e","setUploading","upload","target","files","then","setFile","result","clearFile","setState","onChange","type","renderUploadFile","part","build","accept","renderUploadButton","size","btnText","refs","file","click","render","name","label","addStates","getStyleStates","validity","displayName","propTypes","multiple","bool","string","array","func","isRequired","defaultProps","childContextTypes","contextTypes"],"mappings":"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","file":"Uploader.js","sourcesContent":["/**\n * @file melon/Uploader\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes} from 'react';\nimport Button from './Button';\nimport Icon from './Icon';\nimport Progress from './Progress';\nimport Link from './Link';\nimport Validity from 'melon-core/Validity';\nimport InputComponent from 'melon-core/InputComponent';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Uploader');\n\n/**\n * melon/Uploader\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Uploader extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @protected\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            isUploading: false,\n            isUploaded: !!this.props.value\n        };\n\n    }\n\n    /**\n     * 文件上传时的处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onFileChange(e) {\n\n        this.setUploading();\n\n        this\n            .props\n            .upload({\n                target: this,\n                files: e.target.files\n            })\n            .then(\n                result => this.setFile(result),\n                error => this.clearFile()\n            );\n\n    }\n\n    /**\n     * 设置正在上传的状态\n     *\n     * @public\n     */\n    setUploading() {\n        this.setState({\n            isUploading: true\n        });\n    }\n\n    /**\n     * 设置上传完毕以后的文件地址\n     *\n     * @public\n     * @param {string} value 文件地址\n     */\n    setFile(value) {\n\n        this.setState({\n            isUploaded: true,\n            isUploading: false\n        }, () => {\n            super.onChange({\n                type: 'change',\n                target: this,\n                value\n            });\n        });\n    }\n\n    /**\n     * 重置上传的文件\n     *\n     * @public\n     */\n    clearFile() {\n\n        this.setState({\n            isUploaded: false,\n            isUploading: false\n        }, () => {\n\n            super.onChange({\n                type: 'change',\n                target: this,\n                value: ''\n            });\n        });\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement?}\n     */\n    renderUploadFile() {\n\n        const {isUploading, isUploaded} = this.state;\n\n        return isUploading || isUploaded\n            ? null\n            : (\n                <input\n                    ref=\"file\"\n                    type=\"file\"\n                    className={cx().part('file').build()}\n                    onChange={e => {\n                        this.onFileChange(e);\n                    }}\n                    accept={this.props.accept} />\n            );\n\n    }\n\n    /**\n     * 渲染按钮\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderUploadButton() {\n\n        const {isUploading, isUploaded, value} = this.state;\n        const {size, btnText} = this.props;\n\n        if (isUploading) {\n            return (\n                <Progress\n                    size={size}\n                    mode=\"indeterminate\"\n                    shape=\"circle\" />\n            );\n        }\n\n        if (isUploaded) {\n\n            return (\n                <div className={cx().part('uploaded').build()}>\n                    <Icon icon=\"done\" size={size} /> 已上传\n                    <Link\n                        size={size}\n                        href={value}\n                        variants={['button']}\n                        target=\"_blank\">\n                        查看\n                    </Link>\n                    <Button\n                        size={size}\n                        type=\"button\"\n                        onClick={() => {\n                            this.clearFile();\n                        }} >\n                        重选\n                    </Button>\n                </div>\n            );\n        }\n\n        return (\n            <Button\n                type=\"button\"\n                variants={['raised']}\n                onClick={() => {\n                    this.refs.file.click();\n                }}>\n                <Icon icon=\"file-upload\" />\n                {btnText}\n            </Button>\n        );\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n        const {value, name, label} = props;\n\n        return (\n            <div className={cx(props).addStates(this.getStyleStates()).build()}>\n                <input name={name} type=\"hidden\" value={value} />\n                {label ? <label className={cx().part('label').build()}>{label}</label> : null}\n                {this.renderUploadFile()}\n                {this.renderUploadButton()}\n                <Validity validity={this.state.validity} />\n            </div>\n        );\n\n    }\n\n}\n\nUploader.displayName = 'Uploader';\n\nUploader.propTypes = {\n    ...InputComponent.propTypes,\n    multiple: PropTypes.bool,\n    accept: PropTypes.string,\n    files: PropTypes.array,\n    upload: PropTypes.func.isRequired,\n    btnText: PropTypes.string,\n    label: PropTypes.string\n};\n\nUploader.defaultProps = {\n    ...InputComponent.defaultProps,\n    btnText: '点击上传'\n};\n\nUploader.childContextTypes = InputComponent.childContextTypes;\nUploader.contextTypes = InputComponent.contextTypes;\n"]}