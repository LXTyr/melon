{"version":3,"sources":["Uploader.js"],"names":["cx","Uploader","props","context","onFileChange","bind","onUploadSucceed","onUploadFailed","onClear","onUploadCancel","state","value","uploading","getStatus","componentWillReceiveProps","nextProps","upload","setState","componentWillUnmount","token","e","files","target","then","result","error","onChange","type","renderUploadFile","status","part","build","accept","renderUploadButton","size","placeholder","getPartClassName","refs","file","click","render","name","style","className","addStates","getStyleStates","displayName","getCheck","names","mutex","ISSUE_URL","propName","componentName","rest","every","some","Error","join","propTypes","controlledGroup","uncontrolledGroup","controlledCheck","uncontrolledCheck","string","bool","func","defaultValue","onUploadStart","defaultProps","childContextTypes","contextTypes"],"mappings":"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","file":"Uploader.js","sourcesContent":["/**\n * @file melon/Uploader\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes} from 'react';\nimport Button from './Button';\nimport Icon from './Icon';\nimport Progress from './Progress';\nimport Link from './Link';\nimport InputComponent from 'melon-core/InputComponent';\nimport guid from './common/util/guid';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Uploader');\n\n/**\n * melon/Uploader\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Uploader extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        this.onFileChange = this.onFileChange.bind(this);\n        this.onUploadSucceed = this.onUploadSucceed.bind(this);\n        this.onUploadFailed = this.onUploadFailed.bind(this);\n        this.onClear = this.onClear.bind(this);\n        this.onUploadCancel = this.onUploadCancel.bind(this);\n\n        /**\n         * 状态\n         *\n         * @protected\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            value: props.value == null ? '' : props.value,\n            uploading: 'value' in props ? !!props.uploading : false\n        };\n\n    }\n\n    getStatus(props) {\n\n        const {\n            value,\n            uploading\n        } = props;\n\n        return uploading\n            ? 'uploading'\n            : (value ? 'fulfilled' : 'empty');\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (\n            nextProps.uploading !== this.state.uploading\n            && !nextProps.upload\n        ) {\n            this.setState({\n                uploading: nextProps.uploading\n            });\n        }\n\n        super.componentWillReceiveProps(nextProps);\n\n    }\n\n    componentWillUnmount() {\n        this.token = null;\n    }\n\n    /**\n     * 文件上传时的处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onFileChange(e) {\n\n        const {\n            upload,\n            onFileChange\n        } = this.props;\n\n        const files = e.target.files;\n\n        // controlled 模式\n        if (onFileChange) {\n            onFileChange(files);\n            return;\n        }\n\n        this.setState({\n            uploading: true\n        });\n\n        const token = this.token = guid();\n\n        // Uncontrolled 模式\n        upload(e.target.files, this.props).then(\n            result => {\n                if (this.token === token) {\n                    this.onUploadSucceed(result);\n                }\n            },\n            error => {\n                if (this.token === token) {\n                    this.onUploadFailed(error);\n                }\n            }\n        );\n    }\n\n    onUploadSucceed(result) {\n\n        const onUploadSucceed = this.props.onUploadSucceed;\n\n        if (onUploadSucceed) {\n            onUploadSucceed(result);\n        }\n\n        super.onChange({\n            type: 'change',\n            value: result,\n            target: this\n        }, () => {\n            this.setState({uploading: false});\n        });\n\n    }\n\n    onUploadFailed(error) {\n\n        const onUploadFailed = this.props.onUploadFailed;\n\n        if (onUploadFailed) {\n            onUploadFailed(error);\n        }\n\n        this.setState({uploading: false});\n    }\n\n    onUploadCancel() {\n\n        const onUploadCancel = this.props.onUploadCancel;\n\n        if (onUploadCancel && onUploadCancel) {\n            onUploadCancel();\n        }\n\n        if ('value' in this.props) {\n            return;\n        }\n\n        this.token = null;\n\n        this.setState({\n            uploading: false\n        });\n\n    }\n\n\n    /**\n     * 重置上传的文件\n     *\n     * @public\n     */\n    onClear() {\n\n        const {\n            onFileChange,\n            onClear\n        } = this.props;\n\n        if (onFileChange) {\n            onFileChange(null);\n            return;\n        }\n\n        if (onClear) {\n            onClear();\n        }\n\n        this.setState({value: ''});\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement?}\n     */\n    renderUploadFile() {\n\n        const status = this.getStatus(this.state);\n\n        return status !== 'empty'\n            ? null\n            : (\n                <input\n                    ref=\"file\"\n                    type=\"file\"\n                    className={cx().part('file').build()}\n                    onChange={this.onFileChange}\n                    accept={this.props.accept} />\n            );\n\n    }\n\n    /**\n     * 渲染按钮\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderUploadButton() {\n\n        const status = this.getStatus(this.state);\n        const {size, placeholder} = this.props;\n        const value = this.state.value;\n\n        switch (status) {\n\n            case 'fulfilled':\n                return (\n                    <div className={cx.getPartClassName('content')}>\n                        <img\n                            className={cx.getPartClassName('preview')}\n                            src={value} />\n                        <Link\n                            size={size}\n                            href={value}\n                            title=\"点击查看\"\n                            target=\"_blank\">\n                            {value}\n                        </Link>\n                        <Button\n                            size={size}\n                            type=\"button\"\n                            title=\"重新选择\"\n                            onClick={this.onClear} >\n                            <Icon icon=\"refresh\" />\n                        </Button>\n                    </div>\n                );\n            case 'uploading':\n                return (\n                    <div className={cx.getPartClassName('uploading')}>\n                        <Progress\n                            size=\"xxs\"\n                            mode=\"indeterminate\"\n                            shape=\"circle\" />\n                        <span>正在上传...</span>\n                        <Button\n                            title=\"取消上传\"\n                            variants={['icon']}\n                            size=\"xxs\"\n                            type=\"button\"\n                            onClick={this.onUploadCancel}>\n                            <Icon icon=\"clear\" />\n                        </Button>\n                    </div>\n                );\n            case 'empty':\n            default:\n                return (\n                    <div\n                        className={cx.getPartClassName('content')}\n                        onClick={() => {\n                            this.refs.file.click();\n                        }}>\n                        <Icon icon=\"file-upload\" />\n                        <span className={cx.getPartClassName('placeholder')}>\n                            {placeholder}\n                        </span>\n                    </div>\n                );\n\n        }\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const {name, style} = this.props;\n        const value = this.state.value;\n        const className = cx(this.props)\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div\n                className={className}\n                style={style}>\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value}\n                    readOnly />\n                {this.renderUploadFile()}\n                {this.renderUploadButton()}\n            </div>\n        );\n\n    }\n\n}\n\nUploader.displayName = 'Uploader';\n\nfunction getCheck(names, mutex) {\n\n    const ISSUE_URL = 'https://github.com/react-melon/melon/issues/53';\n\n    return propTypes => (props, propName, componentName, ...rest) => {\n\n        // 全部存在\n        if (names.every(name => (name in props))) {\n\n            // 但是有互斥\n            if (mutex.some(name => (name in props))) {\n                return new Error(`Cannot set ${mutex.join(', ')} with ${names.join(', ')}. See: ${ISSUE_URL}`);\n            }\n\n            // 原来的校验\n            return propTypes(props, propName, componentName, ...rest);\n\n        }\n\n        // 部分存在\n        if (names.some(name => (name in props))) {\n            return new Error(`Please set ${names.join(', ')} at same time. See : ${ISSUE_URL}`);\n        }\n\n        // 全部都不存在\n        return propTypes(props, propName, componentName, ...rest);\n\n    };\n\n}\n\nconst controlledGroup = ['value', 'uploading', 'onFileChange'];\nconst uncontrolledGroup = ['defaultValue', 'upload'];\n\nconst controlledCheck = getCheck(controlledGroup, uncontrolledGroup);\nconst uncontrolledCheck = getCheck(uncontrolledGroup, controlledGroup);\n\nUploader.propTypes = {\n\n    ...InputComponent.propTypes,\n\n    accept: PropTypes.string,\n    placeholder: PropTypes.string,\n\n    value: controlledCheck(PropTypes.string),\n    uploading: controlledCheck(PropTypes.bool),\n    onFileChange: controlledCheck(PropTypes.func),\n\n    defaultValue: uncontrolledCheck(InputComponent.propTypes.defaultValue),\n    upload: uncontrolledCheck(PropTypes.func),\n    onUploadStart: uncontrolledCheck(PropTypes.func),\n    onUploadSucceed: uncontrolledCheck(PropTypes.func),\n    onUploadFailed: uncontrolledCheck(PropTypes.func)\n\n};\n\nUploader.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '点击上传'\n};\n\nUploader.childContextTypes = InputComponent.childContextTypes;\nUploader.contextTypes = InputComponent.contextTypes;\n"]}