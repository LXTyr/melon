{"version":3,"sources":["Uploader.js"],"names":["cx","Uploader","props","context","state","isUploading","isUploaded","value","onFileChange","e","setUploading","upload","onSelect","event","target","files","then","setFile","result","clearFile","componentWillReceiveProps","nextProps","setState","onChange","type","renderUploadFile","part","build","accept","renderUploadButton","size","placeholder","getPartClassName","refs","file","click","render","name","style","className","addStates","getStyleStates","validity","displayName","propTypes","string","func","isRequired","defaultProps","childContextTypes","contextTypes"],"mappings":"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","file":"Uploader.js","sourcesContent":["/**\n * @file melon/Uploader\n * @author leon(ludafa@outlook.com)\n */\n\nimport React, {PropTypes} from 'react';\nimport Button from './Button';\nimport Icon from './Icon';\nimport Progress from './Progress';\nimport Link from './Link';\nimport Validity from 'melon-core/Validity';\nimport InputComponent from 'melon-core/InputComponent';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Uploader');\n\n/**\n * melon/Uploader\n *\n * @extends {melon-core/InputComponent}\n * @class\n */\nexport default class Uploader extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props   属性\n     * @param  {*} context 上下文\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        /**\n         * 状态\n         *\n         * @protected\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            isUploading: false,\n            isUploaded: !!this.props.value\n        };\n\n    }\n\n    /**\n     * 文件上传时的处理\n     *\n     * @protected\n     * @param  {Object} e 事件对象\n     */\n    onFileChange(e) {\n\n        this.setUploading();\n\n        const {upload, onSelect} = this.props;\n\n        const event = {\n            target: this,\n            files: e.target.files\n        };\n\n        if (upload) {\n            upload(event).then(\n                result => this.setFile(result),\n                error => this.clearFile()\n            );\n            return;\n        }\n\n        onSelect(event);\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        const value = nextProps.value;\n\n        super.componentWillReceiveProps(nextProps);\n\n        if (value) {\n            this.setState({\n                isUploaded: true,\n                isUploading: false,\n                value\n            });\n        }\n        else {\n            this.setState({\n                isUploaded: false,\n                value\n            });\n        }\n\n    }\n\n    /**\n     * 设置正在上传的状态\n     *\n     * @public\n     */\n    setUploading() {\n        this.setState({\n            isUploading: true\n        });\n    }\n\n    /**\n     * 设置上传完毕以后的文件地址\n     *\n     * @public\n     * @param {string} value 文件地址\n     */\n    setFile(value) {\n\n        this.setState({\n            isUploaded: true,\n            isUploading: false,\n            value\n        });\n\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value\n        });\n\n\n    }\n\n    /**\n     * 重置上传的文件\n     *\n     * @public\n     */\n    clearFile() {\n\n        this.setState({\n            isUploaded: false,\n            isUploading: false,\n            value: ''\n        });\n\n\n        super.onChange({\n            type: 'change',\n            target: this,\n            value: ''\n        });\n\n\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement?}\n     */\n    renderUploadFile() {\n\n        const {isUploading, isUploaded} = this.state;\n\n        return isUploading || isUploaded\n            ? null\n            : (\n                <input\n                    ref=\"file\"\n                    type=\"file\"\n                    className={cx().part('file').build()}\n                    onChange={e => {\n                        this.onFileChange(e);\n                    }}\n                    accept={this.props.accept} />\n            );\n\n    }\n\n    /**\n     * 渲染按钮\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderUploadButton() {\n\n        const {isUploading, isUploaded, value} = this.state;\n        const {size, placeholder} = this.props;\n\n        if (isUploading) {\n            return (\n                <Progress\n                    size={size}\n                    mode=\"indeterminate\"\n                    shape=\"circle\" />\n            );\n        }\n\n        if (isUploaded) {\n\n            return (\n                <div className={cx.getPartClassName('content')}>\n                    <image\n                        className={cx.getPartClassName('preview')}\n                        src={value} />\n                    <Link\n                        size={size}\n                        href={value}\n                        title=\"点击查看\"\n                        target=\"_blank\">\n                        {value}\n                    </Link>\n                    <Button\n                        size={size}\n                        type=\"button\"\n                        title=\"重新选择\"\n                        onClick={() => {\n                            this.clearFile();\n                        }} >\n                        <Icon icon=\"refresh\" />\n                    </Button>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className={cx.getPartClassName('content')}\n                onClick={() => {\n                    this.refs.file.click();\n                }}>\n                <Icon icon=\"file-upload\" />\n                <span className={cx.getPartClassName('placeholder')}>\n                    {placeholder}\n                </span>\n            </div>\n        );\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n        const {value, name, style} = props;\n        const className = cx(props).addStates(this.getStyleStates()).build();\n\n        return (\n            <div\n                className={className}\n                style={style}>\n                <input name={name} type=\"hidden\" value={value} />\n                {this.renderUploadFile()}\n                {this.renderUploadButton()}\n                <Validity validity={this.state.validity} />\n            </div>\n        );\n\n    }\n\n}\n\nUploader.displayName = 'Uploader';\n\nUploader.propTypes = {\n    ...InputComponent.propTypes,\n    accept: PropTypes.string,\n    upload: PropTypes.func.isRequired,\n    placeholder: PropTypes.string\n};\n\nUploader.defaultProps = {\n    ...InputComponent.defaultProps,\n    placeholder: '点击上传'\n};\n\nUploader.childContextTypes = InputComponent.childContextTypes;\nUploader.contextTypes = InputComponent.contextTypes;\n"]}