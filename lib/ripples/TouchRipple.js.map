{"version":3,"sources":["ripples/TouchRipple.js"],"names":["dom","cx","TouchRipple","props","state","now","center","onMouseDown","bind","willLeave","pageX","pageY","setState","getCenter","Date","getTime","sholdComponentUpdate","nextProps","nextState","opacity","main","findDOMNode","position","getPosition","radius","Math","max","width","height","left","top","key","valOfKey","stiffness","damping","scale","render","centerX","centerY","styles","style","circleClassName","part","build","interpolatedStyles","map","config","defaultProps","propTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;QAQYA,G;AARZ;;;;;AAYA,QAAMC,KAAK,uBAAO,aAAP,CAAX;;QAEqBC,W;;;AAEjB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEAEf,sBAAMA,KAAN,CAFe;;AAIf,kBAAKC,KAAL,GAAa;AACTC,qBAAK,MAAM,CADF;AAETC,wBAAQ,CAAC,CAAD,EAAI,CAAJ;AAFC,aAAb;;AAKA,kBAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,kBAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AAVe;AAWlB;;8BAEDD,W,8BAA4B;AAAA,gBAAfG,KAAe,QAAfA,KAAe;AAAA,gBAARC,KAAQ,QAARA,KAAQ;;;AAExB,iBAAKC,QAAL,CAAc;AACVN,wBAAQ,KAAKO,SAAL,CAAeH,KAAf,EAAsBC,KAAtB,CADE;AAEVN,qBAAK,MAAM,IAAIS,IAAJ,GAAWC,OAAX;AAFD,aAAd;AAIH,S;;8BAEDC,oB,iCAAqBC,S,EAAWC,S,EAAW;AAAA,gBAChCf,KADgC,GAChB,IADgB,CAChCA,KADgC;AAAA,gBACzBC,KADyB,GAChB,IADgB,CACzBA,KADyB;;AAEvC,mBAAOD,MAAMgB,OAAN,KAAkBF,UAAUE,OAA5B,IACAf,MAAMC,GAAN,KAAca,UAAUb,GAD/B;AAEH,S;;8BAEDQ,S,sBAAUH,K,EAAOC,K,EAAO;;AAEpB,gBAAMS,OAAO,sBAASC,WAAT,CAAqB,IAArB,CAAb;AACA,gBAAMC,WAAWtB,IAAIuB,WAAJ,CAAgBH,IAAhB,CAAjB;AACA,gBAAMI,SAASC,KAAKC,GAAL,CAASJ,SAASK,KAAlB,EAAyBL,SAASM,MAAlC,IAA4C,CAA3D;;AAEA,iBAAKJ,MAAL,GAAcA,MAAd;;AAEA,mBAAO,CACHd,QAAQY,SAASO,IAAjB,GAAwBL,MADrB,EAEHb,QAAQW,SAASQ,GAAjB,GAAuBN,MAFpB,CAAP;AAIH,S;;8BAEDf,S,sBAAUsB,G,EAAKC,Q,EAAU;AACrB,+CACOA,QADP;AAEIb,yBAAS,yBAAO,CAAP,EAAU,EAACc,WAAW,EAAZ,EAAgBC,SAAS,EAAzB,EAAV,CAFb;AAGIC,uBAAO,yBAAO,CAAP,EAAU,EAACF,WAAW,EAAZ,EAAgBC,SAAS,EAAzB,EAAV;AAHX;AAKH,S;;8BAEDE,M,qBAAS;AAAA;;AAAA,yBAKD,KAAKhC,KALJ;AAAA,uCAGDE,MAHC;AAAA,gBAGQ+B,OAHR;AAAA,gBAGiBC,OAHjB;AAAA,gBAIDjC,GAJC,UAIDA,GAJC;;;AAOL,gBAAMkC,SAAS,CAAC;AACZR,qBAAK1B,GADO;AAEZmC,uBAAO;AACHrB,6BAAS,yBAAO,KAAKhB,KAAL,CAAWgB,OAAlB,CADN;AAEHgB,2BAAO,yBAAO,CAAP;AAFJ;AAFK,aAAD,CAAf;;AAQA,gBAAMM,kBAAkBxC,KAAKyC,IAAL,CAAU,QAAV,EAAoBC,KAApB,EAAxB;;AAEA,mBACI;AAAA;AAAA;AACI,+BAAW,KAAKlC,SADpB;AAEI,4BAAQ8B,MAFZ;AAGK;AAAA,2BACG;AAAA;AAAA;AACI,yCAAa,OAAKhC,WADtB;AAEI,uCAAWN,GAAG,OAAKE,KAAR,EAAewC,KAAf,EAFf;AAGKC,2CAAmBC,GAAnB,CAAuB,kBAAU;AAAA,gDACPC,OAAON,KADA;AAAA,gCACzBrB,OADyB,iBACzBA,OADyB;AAAA,gCAChBgB,KADgB,iBAChBA,KADgB;;AAE9B,mCACI;AACI,qCAAKW,OAAOf,GADhB;AAEI,2CAAWU,eAFf;AAGI,yCAAStB,OAHb;AAII,uCAAOgB,KAJX;AAKI,uCAAO;AACHR,2CAAO,OAAKH,MAAL,GAAc,CAAd,IAAmB,CADvB;AAEHI,4CAAQ,OAAKJ,MAAL,GAAc,CAAd,IAAmB,CAFxB;AAGHK,0CAAMQ,OAHH;AAIHP,yCAAKQ;AAJF,iCALX,GADJ;AAaH,yBAfA;AAHL,qBADH;AAAA;AAHL,aADJ;AA6BH,S;;;;;yBAjGgBpC,W;;;AAqGrBA,gBAAY6C,YAAZ,GAA2B;AACvB5B,iBAAS;AADc,KAA3B;;AAIAjB,gBAAY8C,SAAZ,GAAwB;AACpB7B,iBAAS,iBAAU8B;AADC,KAAxB","file":"TouchRipple.js","sourcesContent":["/**\n * @file melon/TouchRipple\n * @author cxtom<cxtom2008@gmail.com>\n */\n\nimport React, {PropTypes, Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport RippleCircle from './RippleCircle';\nimport * as dom from '../common/util/dom';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport {spring, TransitionMotion} from 'react-motion';\n\nconst cx = create('TouchRipple');\n\nexport default class TouchRipple extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            now: 't' + 0,\n            center: [0, 0]\n        };\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.willLeave = this.willLeave.bind(this);\n    }\n\n    onMouseDown({pageX, pageY}) {\n\n        this.setState({\n            center: this.getCenter(pageX, pageY),\n            now: 't' + new Date().getTime()\n        });\n    }\n\n    sholdComponentUpdate(nextProps, nextState) {\n        const {props, state} = this;\n        return props.opacity !== nextProps.opacity\n            || state.now !== nextState.now;\n    }\n\n    getCenter(pageX, pageY) {\n\n        const main = ReactDOM.findDOMNode(this);\n        const position = dom.getPosition(main);\n        const radius = Math.max(position.width, position.height) / 2;\n\n        this.radius = radius;\n\n        return [\n            pageX - position.left - radius,\n            pageY - position.top - radius\n        ];\n    }\n\n    willLeave(key, valOfKey) {\n        return {\n            ...valOfKey,\n            opacity: spring(0, {stiffness: 60, damping: 15}),\n            scale: spring(2, {stiffness: 60, damping: 15})\n        };\n    }\n\n    render() {\n\n        const {\n            center: [centerX, centerY],\n            now\n        } = this.state;\n\n        const styles = [{\n            key: now,\n            style: {\n                opacity: spring(this.props.opacity),\n                scale: spring(0)\n            }\n        }];\n\n        const circleClassName = cx().part('circle').build();\n\n        return (\n            <TransitionMotion\n                willLeave={this.willLeave}\n                styles={styles}>\n                {interpolatedStyles =>\n                    <div\n                        onMouseDown={this.onMouseDown}\n                        className={cx(this.props).build()}>\n                        {interpolatedStyles.map(config => {\n                            let {opacity, scale} = config.style;\n                            return (\n                                <RippleCircle\n                                    key={config.key}\n                                    className={circleClassName}\n                                    opacity={opacity}\n                                    scale={scale}\n                                    style={{\n                                        width: this.radius * 2 || 0,\n                                        height: this.radius * 2 || 0,\n                                        left: centerX,\n                                        top: centerY\n                                    }} />\n                            );\n                        })}\n                    </div>\n                }\n            </TransitionMotion>\n        );\n\n    }\n\n}\n\nTouchRipple.defaultProps = {\n    opacity: 0.3\n};\n\nTouchRipple.propTypes = {\n    opacity: PropTypes.number\n};\n"]}