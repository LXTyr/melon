{"version":3,"sources":["Progress.js"],"names":["cx","Progress","props","timers","componentDidMount","isDeterminate","isCircle","shape","toLowerCase","scalePath","refs","path","rotateWrapper","wrapper","barUpdate","bar2","setTimeout","componentWillUnmount","Object","keys","forEach","clearTimeout","name","step","barName","stepValues","element","style","left","right","transitionDuration","bind","strokeDasharray","strokeDashoffset","transform","wrapperUpdater","transitionTimingFunction","getRelativeValue","value","min","max","clampedValue","Math","rangeValue","relValue","round","mode","renderLinear","children","width","getPartClassName","getZoom","SIZES","size","renderCircle","zoom","r","strokeWidth","c","pathStyle","relVal","render","className","addVariants","build","displayName","xxs","xs","s","l","xl","xxl","xxxl","defaultProps","propTypes","oneOf","number"],"mappings":"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","file":"Progress.js","sourcesContent":["/**\n * @file melon/Progress\n * @author cxtom<cxtom2008@gmail.com>\n * @author leon<ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Progress');\n\n/**\n * melon/Progress\n *\n * @extends {React.Component}\n * @class\n */\nexport default class Progress extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @public\n     * @constructor\n     * @param  {*} props 属性\n     */\n    constructor(props) {\n        super(props);\n\n        /**\n         * timerIds\n         *\n         * @type {Object}\n         */\n        this.timers = {};\n    }\n\n    /**\n     * Mount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentDidMount() {\n\n        if (this.isDeterminate()) {\n            return;\n        }\n\n        const isCircle = this.props.shape.toLowerCase() === 'circle';\n\n        if (isCircle) {\n            this.scalePath(this.refs.path);\n            this.rotateWrapper(this.refs.wrapper);\n            return;\n        }\n\n        this.barUpdate(\n            0,\n            'bar1',\n            [[-35, 100], [100, -90]]\n        );\n\n        this.timers.bar2 = setTimeout(() => {\n            this.barUpdate(\n                0,\n                'bar2',\n                [[-200, 100], [107, -8]]\n            );\n        }, 850);\n\n    }\n\n    /**\n     * unmount时的处理\n     *\n     * @public\n     * @override\n     */\n    componentWillUnmount() {\n\n        Object.keys(this.timers).forEach(name => {\n            clearTimeout(this.timers[name]);\n            this.timers[name] = null;\n        });\n\n        this.timers = {};\n\n    }\n\n    /**\n     * 更新进度条动画\n     *\n     * @private\n     * @param  {number} step 步骤\n     * @param  {string} barName 名称\n     * @param  {Array}  stepValues 动画的配置\n     */\n    barUpdate(step = 0, barName, stepValues) {\n\n        step %= 4;\n\n        const element = this.refs[barName];\n\n        switch (step) {\n            case 0:\n                element.style.left = stepValues[0][0] + '%';\n                element.style.right = stepValues[0][1] + '%';\n                break;\n            case 1:\n                element.style.transitionDuration = '840ms';\n                break;\n            case 2:\n                element.style.left = stepValues[1][0] + '%';\n                element.style.right = stepValues[1][1] + '%';\n                break;\n            case 3:\n                element.style.transitionDuration = '0ms';\n                break;\n        }\n\n        this.timers[barName] = setTimeout(\n            this.barUpdate.bind(this, step + 1, barName, stepValues),\n            420\n        );\n\n    }\n\n    /**\n     * 缩放圆圈的大小\n     *\n     * @protected\n     * @param  {SVGElement} path 圆\n     * @param  {number} step 动画到哪一个步骤\n     */\n    scalePath(path, step = 0) {\n\n        step %= 3;\n\n        this.timers.path = setTimeout(\n            this.scalePath.bind(this, path, step + 1),\n            step ? 750 : 250\n        );\n\n        if (step === 0) {\n            path.style.strokeDasharray = '1, 200';\n            path.style.strokeDashoffset = 0;\n            path.style.transitionDuration = '0ms';\n            return;\n        }\n\n        if (step === 1) {\n            path.style.strokeDasharray = '89, 200';\n            path.style.strokeDashoffset = -35;\n            path.style.transitionDuration = '750ms';\n            return;\n        }\n\n        path.style.strokeDasharray = '89, 200';\n        path.style.strokeDashoffset = -124;\n        path.style.transitionDuration = '850ms';\n\n    }\n\n    /**\n     * 缩放圆圈的大小\n     *\n     * @protected\n     * @param  {HTMLElement} wrapper 园旋转的动画\n     */\n    rotateWrapper(wrapper) {\n\n        this.timers.wrapper = setTimeout(this.rotateWrapper.bind(this, wrapper), 10050);\n\n        wrapper.style.transitionDuration = '0ms';\n        wrapper.style.transform = 'rotate(0deg)';\n\n        this.timers.wrapperUpdater = setTimeout(() => {\n            wrapper.style.transitionDuration = '10s';\n            wrapper.style.transform = 'rotate(1800deg)';\n            wrapper.style.transitionTimingFunction = 'linear';\n        }, 50);\n\n    }\n\n    /**\n     * 获取相对百分比的值\n     *\n     * @public\n     * @return  {number}\n     */\n    getRelativeValue() {\n\n        const {value, min, max} = this.props;\n\n        const clampedValue = Math.min(Math.max(min, value), max);\n        const rangeValue = max - min;\n        const relValue = Math.round(clampedValue / rangeValue * 10000) / 10000;\n\n        return relValue * 100;\n    }\n\n    /**\n     * 是否是直接传值的\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    isDeterminate() {\n        return this.props.mode.toLowerCase() === 'determinate';\n    }\n\n    /**\n     * 渲染进度条\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderLinear() {\n\n        let children;\n        let style;\n\n        if (this.isDeterminate()) {\n            style = {\n                width: this.getRelativeValue() + '%'\n            };\n        }\n        else {\n            children = ([\n                <div ref=\"bar1\" className={cx.getPartClassName('bar1')} key=\"bar1\" />,\n                <div ref=\"bar2\" className={cx.getPartClassName('bar2')} key=\"bar2\" />\n            ]);\n        }\n\n        return (\n            <div className={cx.getPartClassName('bar')} style={style}>\n                {children}\n            </div>\n        );\n    }\n\n    /**\n     * 获取形状的缩放比例\n     *\n     * @private\n     * @return {number}\n     */\n    getZoom() {\n        return Progress.SIZES[this.props.size] || 1;\n    }\n\n    /**\n     * 渲染圆圈\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderCircle() {\n        let zoom = this.getZoom();\n        let r = 14 * zoom;\n        let strokeWidth = 2 * zoom;\n        let c = 16 * zoom;\n\n        let pathStyle = {};\n\n        if (this.isDeterminate()) {\n            let relVal = this.getRelativeValue();\n            pathStyle.strokeDasharray = Math.round(relVal * 1.25 * zoom) + ',' + (200 * zoom);\n        }\n\n        return (\n            <div ref=\"wrapper\" className={cx.getPartClassName('wapper')}>\n                <svg className={cx.getPartClassName('svg')}>\n                    <circle ref=\"path\"\n                        cx={c}\n                        cy={c}\n                        r={r}\n                        className={cx.getPartClassName('path')}\n                        style={pathStyle}\n                        fill=\"none\"\n                        strokeWidth={strokeWidth}\n                        strokeMiterlimit=\"10\" />\n                </svg>\n            </div>\n        );\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {ReactElement}\n     */\n    render() {\n\n        const props = this.props;\n\n        const {\n            shape,\n            mode\n        } = props;\n\n        const className = cx(props)\n            .addVariants(shape, mode)\n            .build();\n\n        return (\n            <div {...props} className={className}>\n                {shape === 'circle' ? this.renderCircle() : this.renderLinear()}\n            </div>\n        );\n\n    }\n\n}\n\nProgress.displayName = 'Progress';\n\nProgress.SIZES = {\n    xxs: 0.75,\n    xs: 0.875,\n    s: 0.9375,\n    l: 1.125,\n    xl: 1.25,\n    xxl: 1.375,\n    xxxl: 1.5\n};\n\nProgress.defaultProps = {\n    shape: 'linear',\n    mode: 'determinate',\n    value: 0,\n    min: 0,\n    max: 100\n};\n\nProgress.propTypes = {\n    shape: PropTypes.oneOf(['circle', 'linear']),\n    mode: PropTypes.oneOf(['determinate', 'indeterminate']),\n    value: PropTypes.number,\n    min: PropTypes.number,\n    max: PropTypes.number,\n    size: PropTypes.oneOf(Object.keys(Progress.SIZES))\n};\n"]}