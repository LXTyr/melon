{"version":3,"sources":["Popover.js"],"names":["cx","ALIGNMENT_TRANSFORM_ORIGIN_MAP","t","l","b","r","c","Popover","props","context","onWindowResizeOrScroll","bind","leading","trailing","onMotionEnd","renderLayer","setLayer","setRef","state","closing","open","componentWillReceiveProps","nextProps","closeDelay","closeTimer","setTimeout","setState","clearTimeout","componentDidUpdate","anchor","autoWidth","maxHeight","layer","style","overflowY","alignLayerToAnchor","adjustWidth","bindToWindowResizeAndScroll","unbindToWindowResizeAndScroll","componentWillUnmount","delayTimer","onRequestClose","getBoundingClientRect","bottom","top","left","right","windowHeight","windowWidth","onOpened","window","addEventListener","removeEventListener","anchorAlignment","layerAlignment","anchorOffset","layerOffset","transform","points","overflow","adjustX","adjustY","offset","layerOffsetWidth","offsetWidth","anchorOffsetWidth","width","prop","obj","getLayer","className","getPartClassName","begin","end","transformOrigin","split","map","direction","reverse","join","opacity","scale","stiffness","damping","children","render","useLayerMask","variants","alignments","propTypes","bool","isRequired","func","oneOf","arrayOf","number","defaultProps"],"mappings":"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","file":"Popover.js","sourcesContent":["/**\n * @file Popover\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Layer from './Layer';\nimport align from 'dom-align';\nimport {Motion, spring} from 'react-motion';\nimport {throttle} from './common/util/fn';\nimport {getClientHeight, getClientWidth} from './common/util/dom';\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Popover');\n\nconst ALIGNMENT_TRANSFORM_ORIGIN_MAP = {\n    t: 'top',\n    l: 'left',\n    b: 'bottom',\n    r: 'right',\n    c: '50%'\n};\n\nexport default class Popover extends Component {\n\n    constructor(props, context) {\n\n        super(props, context);\n\n        this.onWindowResizeOrScroll = throttle(\n            this.onWindowResizeOrScroll.bind(this),\n            300,\n            {\n                leading: true,\n                trailing: true\n            }\n        );\n\n        this.onMotionEnd = this.onMotionEnd.bind(this);\n        this.renderLayer = this.renderLayer.bind(this);\n\n        this.setLayer = this.setRef.bind(this, 'layer');\n\n        this.state = {\n            closing: false,\n            open: props.open\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        let {open, closeDelay} = nextProps;\n        let closing = this.state.closing;\n\n        // 从展开状态到关闭: 切换到关闭中\n        if (this.state.open !== open) {\n\n            if (!open && closeDelay != null) {\n                this.closeTimer = setTimeout(\n                    () => this.setState({\n                        open,\n                        closing: !open && !closing\n                    }),\n                    closeDelay\n                );\n                return;\n            }\n\n            this.setState({\n                open,\n                closing: !open && !closing\n            });\n\n        }\n\n        // 如果正在延迟收起，又转为展开状态，就把 delayTimer 去掉\n        if (open && this.closeTimer) {\n            clearTimeout(this.closeTimer);\n            this.closeTimer = null;\n        }\n\n    }\n\n    componentDidUpdate() {\n\n        let {\n            anchor,\n            autoWidth,\n            maxHeight\n        } = this.props;\n\n        let open = this.state.open;\n\n        let layer = this.layer;\n\n        if (open && anchor && layer) {\n\n            if (maxHeight != null) {\n                layer.style.maxHeight = `${maxHeight}px`;\n                layer.style.overflowY = 'auto';\n            }\n            else {\n                layer.style.overflowY = layer.style.maxHeight = '';\n            }\n\n            this.alignLayerToAnchor(layer, anchor);\n\n            if (!autoWidth) {\n                this.adjustWidth(layer, anchor);\n            }\n\n            this.bindToWindowResizeAndScroll();\n            return;\n        }\n\n        this.unbindToWindowResizeAndScroll();\n\n    }\n\n    componentWillUnmount() {\n\n        if (this.delayTimer) {\n            clearTimeout(this.delayTimer);\n            this.delayTimer = null;\n        }\n\n        this.unbindToWindowResizeAndScroll();\n\n    }\n\n    onWindowResizeOrScroll() {\n\n        let {\n            anchor,\n            onRequestClose\n        } = this.props;\n\n        let layer = this.layer;\n\n        if (!this.state.open || !layer || !anchor) {\n            return;\n        }\n\n        let {\n            bottom,\n            top,\n            left,\n            right\n        } = anchor.getBoundingClientRect();\n\n        let windowHeight = getClientHeight();\n        let windowWidth = getClientWidth();\n\n        // 在视野内\n        if (\n            top > 0\n            && bottom < windowHeight\n            && left > 0\n            && right < windowWidth\n        ) {\n\n            this.alignLayerToAnchor(layer, anchor);\n            return;\n        }\n\n        onRequestClose && onRequestClose();\n\n    }\n\n    onMotionEnd() {\n\n        if (!this.state.closing) {\n            let onOpened = this.props.onOpened;\n            onOpened && onOpened();\n            return;\n        }\n\n        this.setState({\n            closing: false\n        });\n\n    }\n\n    bindToWindowResizeAndScroll() {\n        window.addEventListener('resize', this.onWindowResizeOrScroll);\n        window.addEventListener('scroll', this.onWindowResizeOrScroll);\n    }\n\n    unbindToWindowResizeAndScroll() {\n        window.removeEventListener('resize', this.onWindowResizeOrScroll);\n        window.removeEventListener('scroll', this.onWindowResizeOrScroll);\n    }\n\n    alignLayerToAnchor(layer, anchor) {\n\n        let {\n            anchorAlignment,\n            layerAlignment,\n            anchorOffset,\n            layerOffset\n        } = this.props;\n\n        let transform = layer.style.transform;\n\n        layer.style.transform = '';\n\n        align(\n            layer,\n            anchor,\n            {\n                points: [anchorAlignment, layerAlignment],\n                overflow: {\n                    adjustX: true,\n                    adjustY: true\n                },\n                offset: layerOffset,\n                anchorOffset: anchorOffset\n            }\n        );\n\n        layer.style.transform = transform;\n\n    }\n\n    /* eslint-disable fecs-prefer-destructure */\n    /**\n     * 调整浮层的宽度，尝试与锚点宽度保持一致\n     *\n     * @param  {DOM} layer  浮层\n     * @param  {DOM} anchor 锚点\n     */\n    adjustWidth(layer, anchor) {\n\n        let layerOffsetWidth = layer.offsetWidth;\n        let anchorOffsetWidth = anchor.offsetWidth;\n\n        if (layerOffsetWidth < anchorOffsetWidth) {\n            layer.style.width = `${anchorOffsetWidth}px`;\n        }\n\n    }\n    /* eslint-enable fecs-prefer-destructure */\n\n\n    setRef(prop, obj) {\n        this[prop] = obj;\n    }\n\n    getLayer() {\n        return this.layer;\n    }\n\n    renderLayer() {\n\n        let className = cx.getPartClassName('layer');\n        let {open, closing} = this.state;\n\n        let begin = open && !closing ? 0 : 1;\n        let end = open && !closing ? 1 : 0;\n\n        let transformOrigin = this.props.anchorAlignment\n            .split('')\n            .map(direction => ALIGNMENT_TRANSFORM_ORIGIN_MAP[direction])\n            // 我们的方向是先垂直再水平，和 css 中的 tranform-origin 是反的，所以要 reverse 一下\n            .reverse()\n            .join(' ');\n\n        return (\n            <Motion\n                defaultStyle={{\n                    opacity: begin,\n                    scale: begin\n                }}\n                style={{\n                    opacity: spring(end),\n                    scale: spring(end, {stiffness: 260, damping: 20})\n                }}\n                onRest={this.onMotionEnd}>\n                {({scale, opacity}) => (\n                    <div\n                        className={className}\n                        ref={this.setLayer}\n                        style={{\n                            opacity: opacity,\n                            transform: `scale(${scale}, ${scale})`,\n                            transformOrigin\n                        }}>\n                        {this.props.children}\n                    </div>\n                )}\n            </Motion>\n        );\n    }\n\n    render() {\n\n        let {\n            onRequestClose,\n            useLayerMask,\n            anchor,\n            variants\n        } = this.props;\n\n        let {open, closing} = this.state;\n\n        return (\n            <Layer\n                variants={variants}\n                render={this.renderLayer}\n                open={anchor && (open || closing)}\n                useLayerMask={useLayerMask}\n                onClickAway={onRequestClose} />\n        );\n\n    }\n\n}\n\nexport const alignments = [\n    'tl', 'tc', 'tr',\n    'cl', 'cc', 'cr',\n    'bl', 'bc', 'br'\n];\n\nPopover.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onRequestClose: PropTypes.func,\n    useLayerMask: PropTypes.bool,\n    anchorAlignment: PropTypes.oneOf(alignments),\n    layerAlignment: PropTypes.oneOf(alignments),\n    anchorOffset: PropTypes.arrayOf(PropTypes.number),\n    layerOffset: PropTypes.arrayOf(PropTypes.number),\n    autoWidth: PropTypes.bool,\n    closeDelay: PropTypes.number\n};\n\nPopover.defaultProps = {\n    open: false,\n    anchorAlignment: 'tl',\n    layerAlignment: 'tl',\n    useLayerMask: false,\n    autoWidth: false\n};\n"]}